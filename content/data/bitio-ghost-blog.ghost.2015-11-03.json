{"meta":{"exported_on":1446562120407,"version":"003"},"data":{"posts":[{"id":2,"uuid":"bb592ee8-f3fb-49f7-ba34-189f6a5f178b","title":"Meteor + Disqus SSO","slug":"meteor-disqus-sso","markdown":"Today I'm writing about how to integrate <a title=\"http://disqus.com/\" href=\"http://disqus.com/\" target=\"_blank\">Disqus</a> in your site and use their SSO ( that, at the moment of writing this post, it's for free&nbsp; 8) ).\n\nUsually you use Disqus with your account (personal) and in that situation, there's no problem integrating it. In  the case I'm describing we will include Disqus as part of our application using the usernames of the application, not your personal account.\n\n<h4>Step 1: Create your app in Disqus</h4>\nPeace of cake, just log to your Disqus account, go to the&nbsp;<strong>dasboard</strong> and create it. Configure it as you like. You will need to request the SSO for it. This is done using <a title=\"Disqus SSO form request\" href=\"http://disqus.com/support/?article=Getting%20Started%20with%20Single%20Sign-On\" target=\"_blank\">this form</a>. To find out all the information that Disqus provides for the SSO, just head to <a href=\"http://help.disqus.com/customer/portal/articles/236206-integrating-single-sign-on\" target=\"_blank\">this article</a>. Once you've get SSO enabled, you'll have todo some extra configuration <a title=\"Disqus API Applications\" href=\"http://disqus.com/api/applications/\" target=\"_blank\">here</a>.\n<h4>Step 2: Our code</h4>\nAs Disqus works based on the URL, I've created a common template so I can reuse it. Disqus also provides you with <a href=\"http://biveevif.disqus.com/admin/settings/universalcode/\" target=\"_blank\">an example</a>&nbsp; ready to include in a <em>common&nbsp;</em>web applications (not wordpress, drupal, etc.). Here is the html (I'm still using <em>the old bootstrap version&nbsp;</em>:roll: ).\n<pre class=\"theme:github lang:xhtml decode:true\" title=\"disqus.html\">&lt;template name=\"disqusBlock\"&gt;\n  &lt;!-- Disqus --&gt;\n  &lt;div class=\"row-fluid\"&gt;\n    &lt;div class=\"span12\"&gt;\n      &lt;div id=\"disqus-container\"&gt;\n        &lt;div id=\"disqus_thread\"&gt;&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;</pre>\nAnd this is the javascript for the template. First the cliente side that just runs on the <strong>rendered</strong> event.\n<pre class=\"theme:github lang:js decode:true\" title=\"disqus.js\">disqus_sso_res = undefined;\ndisqus_config = function () {\n  // The generated payload which authenticates users with Disqus\n  this.page.remote_auth_s3 = disqus_sso_res.auth;\n  this.page.api_key = disqus_sso_res.pubKey;\n}\n\nTemplate.disqusBlock.rendered = function () {\n  Meteor.call('disqusSSO', function (error, result) {\n    if (!error) {\n      console.log('[DISQUS]', 'SSO successful');\n      disqus_sso_res = result;\n\n      var disqus = $(\"#disqus-container\");\n      if (_(disqus.data('disqus')).isUndefined()) {\n        var el = document.createElement(\"script\");\n        el.src = \"/js/disqus/disqus.js\";\n        el.type = 'text/javascript';\n        disqus.prepend(el);\n        disqus.data('disqus', 1);\n      }\n    } else {\n      console.log('[DISQUS]', 'SSO error', error);\n    }\n  });\n};</pre>\nAnd just to protect the private key I created a server side method that generates the required data (credits to&nbsp;Louis Li -&nbsp;<a href=\"https://github.com/disqus/DISQUS-API-Recipes\" target=\"_blank\">https://github.com/disqus/DISQUS-API-Recipes</a>)\n<pre class=\"theme:github lang:js decode:true\" title=\"disqus-server.js\">Meteor.methods({\n  disqusSSO: function () {\n    if (_(Meteor.user().emails).isUndefined()) {\n      throw new Meteor.Error(500, 'Error 500: User has no emails defeined');\n      return;\n    }\n\n    console.log('[DISQUS]', 'SSO login for user', Meteor.user().username);\n\n    var DISQUS_SECRET = \"\";\n    var DISQUS_PUBLIC = \"\";\n\n    var disqusData = {\n      id: Meteor.userId(),\n      username: Meteor.user().username,\n      email: Meteor.user().emails[0].address\n    };\n\n    var disqusStr = JSON.stringify(disqusData);\n    var timestamp = Math.round(+new Date() / 1000);\n\n    /*\n     * Note that `Buffer` is part of node.js\n     * For pure Javascript or client-side methods of\n     * converting to base64, refer to this link:\n     * http://stackoverflow.com/questions/246801/how-can-you-encode-a-string-to-base64-in-javascript\n     */\n    var message = new Buffer(disqusStr).toString('base64');\n\n    /*\n     * CryptoJS is required for hashing (included in dir)\n     * https://code.google.com/p/crypto-js/\n     */\n    var result = CryptoJS.HmacSHA1(message + \" \" + timestamp, DISQUS_SECRET);\n    var hexsig = CryptoJS.enc.Hex.stringify(result);\n\n    return {\n      pubKey: DISQUS_PUBLIC,\n      auth: message + \" \" + hexsig + \" \" + timestamp\n    };\n  }\n});</pre>\n<h4>Verify the message</h4>\nFinally, if you need to verify the generated message, you can try using the <a href=\"http://disqus.com/api/sso/\" target=\"_blank\">Disqus SSO debuger</a>","html":"<p>Today I'm writing about how to integrate <a title=\"http://disqus.com/\" href=\"http://disqus.com/\" target=\"_blank\">Disqus</a> in your site and use their SSO ( that, at the moment of writing this post, it's for free&nbsp; 8) ).</p>\n\n<p>Usually you use Disqus with your account (personal) and in that situation, there's no problem integrating it. In  the case I'm describing we will include Disqus as part of our application using the usernames of the application, not your personal account.</p>\n\n<h4>Step 1: Create your app in Disqus</h4>  \n\n<p>Peace of cake, just log to your Disqus account, go to the&nbsp;<strong>dasboard</strong> and create it. Configure it as you like. You will need to request the SSO for it. This is done using <a title=\"Disqus SSO form request\" href=\"http://disqus.com/support/?article=Getting%20Started%20with%20Single%20Sign-On\" target=\"_blank\">this form</a>. To find out all the information that Disqus provides for the SSO, just head to <a href=\"http://help.disqus.com/customer/portal/articles/236206-integrating-single-sign-on\" target=\"_blank\">this article</a>. Once you've get SSO enabled, you'll have todo some extra configuration <a title=\"Disqus API Applications\" href=\"http://disqus.com/api/applications/\" target=\"_blank\">here</a>.  </p>\n\n<h4>Step 2: Our code</h4>  \n\n<p>As Disqus works based on the URL, I've created a common template so I can reuse it. Disqus also provides you with <a href=\"http://biveevif.disqus.com/admin/settings/universalcode/\" target=\"_blank\">an example</a>&nbsp; ready to include in a <em>common&nbsp;</em>web applications (not wordpress, drupal, etc.). Here is the html (I'm still using <em>the old bootstrap version&nbsp;</em>:roll: ).  </p>\n\n<pre class=\"theme:github lang:xhtml decode:true\" title=\"disqus.html\">&lt;template name=\"disqusBlock\"&gt;  \n  &lt;!-- Disqus --&gt;\n  &lt;div class=\"row-fluid\"&gt;\n    &lt;div class=\"span12\"&gt;\n      &lt;div id=\"disqus-container\"&gt;\n        &lt;div id=\"disqus_thread\"&gt;&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;</pre>\n\n<p>And this is the javascript for the template. First the cliente side that just runs on the <strong>rendered</strong> event.  </p>\n\n<pre class=\"theme:github lang:js decode:true\" title=\"disqus.js\">disqus_sso_res = undefined;  \ndisqus_config = function () {  \n  // The generated payload which authenticates users with Disqus\n  this.page.remote_auth_s3 = disqus_sso_res.auth;\n  this.page.api_key = disqus_sso_res.pubKey;\n}\n\nTemplate.disqusBlock.rendered = function () {  \n  Meteor.call('disqusSSO', function (error, result) {\n    if (!error) {\n      console.log('[DISQUS]', 'SSO successful');\n      disqus_sso_res = result;\n\n      var disqus = $(\"#disqus-container\");\n      if (_(disqus.data('disqus')).isUndefined()) {\n        var el = document.createElement(\"script\");\n        el.src = \"/js/disqus/disqus.js\";\n        el.type = 'text/javascript';\n        disqus.prepend(el);\n        disqus.data('disqus', 1);\n      }\n    } else {\n      console.log('[DISQUS]', 'SSO error', error);\n    }\n  });\n};</pre>\n\n<p>And just to protect the private key I created a server side method that generates the required data (credits to&nbsp;Louis Li -&nbsp;<a href=\"https://github.com/disqus/DISQUS-API-Recipes\" target=\"_blank\">https://github.com/disqus/DISQUS-API-Recipes</a>)  </p>\n\n<pre class=\"theme:github lang:js decode:true\" title=\"disqus-server.js\">Meteor.methods({  \n  disqusSSO: function () {\n    if (_(Meteor.user().emails).isUndefined()) {\n      throw new Meteor.Error(500, 'Error 500: User has no emails defeined');\n      return;\n    }\n\n    console.log('[DISQUS]', 'SSO login for user', Meteor.user().username);\n\n    var DISQUS_SECRET = \"\";\n    var DISQUS_PUBLIC = \"\";\n\n    var disqusData = {\n      id: Meteor.userId(),\n      username: Meteor.user().username,\n      email: Meteor.user().emails[0].address\n    };\n\n    var disqusStr = JSON.stringify(disqusData);\n    var timestamp = Math.round(+new Date() / 1000);\n\n    /*\n     * Note that `Buffer` is part of node.js\n     * For pure Javascript or client-side methods of\n     * converting to base64, refer to this link:\n     * <a href='http://stackoverflow.com/questions/246801/how-can-you-encode-a-string-to-base64-in-javascript'>http://stackoverflow.com/questions/246801/how-can-you-encode-a-string-to-base64-in-javascript</a>\n     */\n    var message = new Buffer(disqusStr).toString('base64');\n\n    /*\n     * CryptoJS is required for hashing (included in dir)\n     * <a href='https://code.google.com/p/crypto-js/'>https://code.google.com/p/crypto-js/</a>\n     */\n    var result = CryptoJS.HmacSHA1(message + \" \" + timestamp, DISQUS_SECRET);\n    var hexsig = CryptoJS.enc.Hex.stringify(result);\n\n    return {\n      pubKey: DISQUS_PUBLIC,\n      auth: message + \" \" + hexsig + \" \" + timestamp\n    };\n  }\n});</pre>\n\n<h4>Verify the message</h4>  \n\n<p>Finally, if you need to verify the generated message, you can try using the <a href=\"http://disqus.com/api/sso/\" target=\"_blank\">Disqus SSO debuger</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389656985426,"created_by":1,"updated_at":1389959230346,"updated_by":1,"published_at":1389958879704,"published_by":1},{"id":3,"uuid":"57d148f6-321b-47ab-ae17-aae662c3b2d8","title":"21 Javascript questions ... you need to know","slug":"21-javascript-questions-you-need-to-know","markdown":"![](/content/images/2014/Jan/javascript.jpg)\n\nI've&nbsp;recently&nbsp;started to develop a new project using Meteor.js, a javascript framework quite new and yet very impressive.\nSince I come from a more ‘traditional’ development world where names like java, php and mysql were more than usual, I have to admit that it has been a little bit cumbersome facing this transition.\n\nI found this post in <a title=\"Preguntas de una entrevista de trabajo de Javascript\" href=\"http://www.codejobs.biz/es/blog/2013/01/23/preguntas-de-una-entrevista-de-trabajo-de-javascript\" target=\"_blank\">codejobs</a>&nbsp; (only in spanish) where they make 21 question related to Javascript that you should know if you ever go to a job interview. So, let’s get to it:\n<!--more-->\n\n[bc_group] \n\n[bc_collapse title=\"Difference between using var and not using var in JavaScript\" open=\"n\"]\n<p>If you're in the global scope then there's no difference. If you're in a function then \"var\" will create a local variable, \"no var\" will look up the scope chain until it finds the variable or hits the global scope (at which point it will create it)</p>\n<p>reference: <a href=\"http://stackoverflow.com/questions/1470488/difference-between-using-var-and-not-using-var-in-javascript\" target=\"_blank\">Difference between using var and not using var in JavaScript</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"Explain the difference when using defer/async in a script tag\" open=\"n\"]\n<p><strong>defer</strong> Simply put: delaying script execution until the HTML parser has finished. A positive effect of this attribute is that the DOM will be available for your script. However, since not every browser supports defer yet, don’t rely on it!<br/>\n<strong>async</strong> Don’t care when the script will be available? Asynchronous is the best of both worlds: HTML parsing may continue and the script will be executed as soon as it’s ready. I’d recommend this for scripts such as Google Analytics.\n</p>\n<p>reference: <a href=\"http://peter.sh/experiments/asynchronous-and-deferred-javascript-execution-explained/\" target=\"_blank\">Peter Berloo</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"Difference between == and ===\" open=\"n\"]\n<p><strong>short answer:</strong>The identity (===) operator behaves identically to the equality (==) operator except no type conversion is done, and the types must be the same to be considered equal.\n<strong>more detailed answer:</strong>\nJavaScript has two sets of equality operators: === and !==, and their evil twins == and !=. The good ones work the way you would expect. If the two operands are of the same type and have the same value, then === produces true and !== produces false. The evil twins do the right thing when the operands are of the same type, but if they are of different types, they attempt to coerce the values. The rules by which they do that are complicated and unmemorable. These are some of the interesting cases:\n<code>\n'' == '0' // false\n0 == '' // true\n0 == '0' // truefalse == 'false' // false\nfalse == '0' // truefalse == undefined // false\nfalse == null // false\nnull == undefined // true\n\n' \\\\t\\\\r\\\\n ' == 0 // true\n</code>\nThe lack of transitivity is alarming. My advice is to never use the evil twins. Instead, always use === and !==. All of the comparisons just shown produce false with the === operator\n</p>\n<p>references\n  <ul>\n    <li>\n      <a title=\"Javascript Tutorial: Comparison Operators\" href=\"http://www.c-point.com/javascript_tutorial/jsgrpComparison.htm\" target=\"_blank\">Javascript Tutorial: Comparison Operators</a></li>\n    <li>\n    <li>\n      <a title=\"JavaScript: The Good Parts\" href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" target=\"_blank\">JavaScript: The Good Parts</a>\n    </li>\n  </ul>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"How to check if a variable is null or undefined\" open=\"n\"]\n<p>\nYou can just check if the variable has a truthy value or not. That means\n<code>\n  if( value ) {\n  }\n</code>\nwill evaluate to true if value is not:\n<code>null</code>\n<code>undefined</code>\n<code>NaN</code>\n<code>empty string (\"\")</code>\n<code>0</code>\n<code>false</code>\n</p>\n<p>reference: <a href=\"http://stackoverflow.com/questions/5515310/is-there-a-standard-function-to-check-for-null-undefined-or-blank-variables-in\">Is there a standard function to check for null, undefined, or blank variables in JavaScript?</a>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"How do you check is a variable is an object?\" open=\"n\"]\n<p>Either use <strong>typeof</strong> of underscore's <strong>isObject</strong></p>\n<p>references \n  <ul>\n  <li><a href=\"http://tobyho.com/2011/01/28/checking-types-in-javascript/\">Checking types in javascript</a></li>\n  <li><a href=\"http://underscorejs.org/#isObject\">_.isObject()</a></li>\n  </ul>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"What is <em>strict mode</em> in javascript?\" open=\"n\"]\n<p>\nStrict mode makes several changes to normal JavaScript semantics. First, strict mode eliminates some JavaScript silent errors by changing them to throw errors. Second, strict mode fixes mistakes that make it difficult for JavaScript engines to perform optimizations: strict mode code can sometimes be made to run faster than identical code that's not strict mode. Third, strict mode prohibits some syntax likely to be defined in future versions of ECMAScript.\n</p>\n<p>reference <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode\">\nStrict mode @mozilla-dev-network</a>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"How do you debug in javascript?\" open=\"n\"]\n<p>using debugging tools such as <em>chrome developer tools</em>, <em>mozilla debugger</em>, etc</p>\n<p>references\n  <ul>\n    <li><a href=\"https://developers.google.com/chrome-developer-tools/docs/javascript-debugging\">Chrome developer tools</a></li>\n    <li><a href=\"https://developer.mozilla.org/es/docs/Tools/Debugger\">Mozilla debugger</a></li>\n  </ul>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"What is JSLint?\" open=\"n\"]\n<p>\nJSLint is a static code analysis tool used in software development for checking if JavaScript source code complies with coding rules. It was developed by Douglas Crockford. It is provided primarily as an online tool, but there are also command-line adaptations.<br/>\nJSLint by default warns of multiple var declarations, and suggests that they be combined (eg. var a=1, b=2, c=3...) Some consider this less readable than having a var statement for each new variable. When the commas between declarations are at the end of a line, they could easily be omitted, making the variable global scope (a coding error that strict mode will warn about).\n<code>\n  var a=1,\n  b=2, // missing comma here would be hard to catch.\n  c=3;\n</code>\nA more readable and reliable formation may be used:\n<code>\nvar a=1\n  , b=2\n  , c=3;\n</code>\n</p>\n<p>\nreferences\n<ul>\n  <li><a href=\"http://www.jslint.com/\">JSLint</a></li>\n  <li><a href=\"http://en.wikipedia.org/wiki/JSLint\">Wikipedia</a></li>\n</ul>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"How do you add a script to a page?\" open=\"n\"]\n<p>\nTo insert a JavaScript into an HTML page, use the &lt;script type=\"text/javascript\"&gt; tag. The &lt;script&gt; and &lt;/script&gt; tells where the JavaScript starts and ends. The lines between the &lt;script type=\"text/javascript\"&gt; and &lt;/script&gt; contain the JavaScript:\n<code>\n&lt;script type=\"text/javascript\"&gt;\nalert(\"My First JavaScript\");\n&lt;/script&gt;\n</code>\nJavaScripts can be put in the &lt;head&gt; and in the &lt;body&gt; section of an HTML page.\n</p>\n<p>\nreference <a href=\"http://www.w3schools.com/js/js_howto.asp\">w3school</a>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"Differences between <code>window.onload</code> and <code>onDocumentReady</code>?\" open=\"n\"]\n<p>\nBoth functions are used to perform tasks when the page is loaded in the browser but they have important differences. Most importantly, “window.onload” will execute code when browser has loaded the DOM tree and all other resources like images, objects, etc, while onDocumentReady allows you to execute code when only the DOM tree has been built, without waiting for images to load. Thus, you can start scripting agains the DOM much quicker with onDocumentReady. Another important difference is that window.onload is not cross-browser compatible while using something like jQuery’s document.ready() will work nicely on all browsers.\n</p>\n<p>\nreference <a href=\"http://rmdarimd.wordpress.com/2011/10/05/what-is-the-main-difference-between-window-onload-and-ondocumentready/\">RMDARIMD blog</a>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"Where is better to add the script, header or footer? why?\" open=\"n\"]\n<p>Put them at the footer.</p>\n<p>reference <a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\">Best Practices for Speeding Up Your Web Site</a></p>\n[/bc_collapse]\n\n[bc_collapse title='What is the result of \"1\"+2+4? 5+4+\"3\"?' open=\"n\"]\n<p>\n<code>\n  \"1\"+2+4 = 124\n  5+4+\"3\" = 93\n</code>\n</p>\n<p>reference <a href=\"http://www.w3schools.com/js/js_operators.asp\">w3school</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"Difference between <code>undefined</code> and <code>null</code>?\" open=\"n\"]\n<p>\nIn JavaScript, undefined means a variable has been declared but has not yet been assigned a value, such as:\n<code>  var TestVar;\n  alert(TestVar); //shows undefined\n  alert(typeof TestVar); //shows undefined </code>\nnull is an assignment value. It can be assigned to a variable as a representation of no value:\n<code>  var TestVar = null;\n  alert(TestVar); //shows null\n  alert(typeof TestVar); //shows object</code>\n\nFrom the preceding examples, it is clear that undefined and null are two distinct types: undefined is a type itself (undefined) while null is an object.\n</p>\n<p>reference <a href=\"http://stackoverflow.com/questions/5076944/what-is-the-difference-between-null-and-undefined-in-javascript\">stackoverflow</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"How can you change the class or style of an element with javascript?\" open=\"n\"]\n<p>\nThe standard JavaScript way to select an element is using document.getElementById(\"Id\"), which is what the following examples use - you can of course obtain elements in other ways, and in the right situation may simply use this instead - however, going into detail on this is beyond the scope of the answer.</code></code>To change all classes for an element:\n\nTo replace all existing classes with one or more new classes, set the className attribute:\n<code>  document.getElementById(\"MyElement\").className = \"MyClass\";</code>\n</p>\n<p> reference <a href=\"http://stackoverflow.com/questions/195951/change-an-elements-css-class-with-javascript/6960449#6960449\">stackoverflow</a>\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"What is <em>non obtrusive</em> javascript?\" open=\"n\"]\n<p>\nUnobtrusive JavaScript is a general approach to the use of JavaScript in web pages. Though the term is not formally defined, its basic principles are generally understood to include:\n<ul>\n<li>Separation of functionality (the \"behavior layer\") from a Web page's structure/content and presentation</li>\n<li>Best practices to avoid the problems of traditional JavaScript programming (such as browser inconsistencies and lack of scalability)</li>\n<li>Progressive enhancement to support user agents that may not support advanced JavaScript functionality</li>\n</ul>\n</p>\n<p>reference <a href=\"http://en.wikipedia.org/wiki/Unobtrusive_JavaScript\">wikipedia</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"How to use <em>namespaces</em> in javascript?\" open=\"n\"]\n<p>\nIn most programming languages we know the concept of namespaces (or packages). Namespaces allow us to group code and help us to avoid name-collisions.Unfortunately, the concept of namespaces does not exist in JavaScript. To add insult to injury, everything you create in JavaScript is by default global. Now obviously, this is a recipe for disaster, especially since in any modern application you’ll probably end upll using third-party components.\n</p>\n<p>reference <a href=\"http://www.kenneth-truyers.net/2013/04/27/javascript-namespaces-and-modules/\">javascript namespaces and modules (MUST READ)</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"What type of data javascript supports?\" open=\"n\"]\n<p>String, Number, Boolean, Array, Object, Null, Undefined.</p>\n<p>reference <a href=\"http://www.w3schools.com/js/js_datatypes.asp\">reference w3school</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"Difference between <code>innerHTML</code> and <code>append</code>?\" open=\"n\"]\n<p>\nInnerHTML is a string and it’s not standard. Even though innerHTML is faster it is better to use the DOM methods such as appendChild() or firstChild or nodeValue, to change innerHTML content. Append() method is slower but more reliable. Plus, to append using innerHTML you need to use += operator\n</p>\n[/bc_collapse]\n\n[bc_collapse title=\"How do you create an object in javascript?\" open=\"n\"]\nThe following example creates a new instance of an object, and adds four properties to it:\n<code>person=new Object();\nperson.firstname=\"John\";\nperson.lastname=\"Doe\";\nperson.age=50;\nperson.eyecolor=\"blue\";\n</code>\nAlternative syntax (using object literals):\n<code>person={firstname:\"John\",lastname:\"Doe\",age:50,eyecolor:\"blue\"};</code>\n</p>\n<p>reference <a href=\"http://www.w3schools.com/js/js_objects.asp\">w3school</a></p>\n[/bc_collapse]\n\n[bc_collapse title=\"Is javascript and object oriented language? if so, why?\" open=\"n\"]\n<p>\nJavaScript does have objects. I would say it's a hybrid: interpreted, functional, object-oriented, and dynamic.I think these characteristics are very important, indeed. They are what makes it a good language, one that's more important every day. JavaScript has strong object-oriented programming capabilities, even though some debates have taken place due to the differences in object-oriented JavaScript compared to other languages.\n</p>\n<p>reference <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript\">mozilla developer network</a>\n[/bc_collapse]\n\n[/bc_group]\n","html":"<p><img src=\"/content/images/2014/Jan/javascript.jpg\" alt=\"\" /></p>\n\n<p>I've&nbsp;recently&nbsp;started to develop a new project using Meteor.js, a javascript framework quite new and yet very impressive. <br />\nSince I come from a more ‘traditional’ development world where names like java, php and mysql were more than usual, I have to admit that it has been a little bit cumbersome facing this transition.</p>\n\nI found this post in <a title=\"Preguntas de una entrevista de trabajo de Javascript\" href=\"http://www.codejobs.biz/es/blog/2013/01/23/preguntas-de-una-entrevista-de-trabajo-de-javascript\" target=\"_blank\">codejobs</a>&nbsp; (only in spanish) where they make 21 question related to Javascript that you should know if you ever go to a job interview. So, let’s get to it:  \n<!--more-->\n\n<p>[bc_group] </p>\n\n<p>[bc_collapse title=\"Difference between using var and not using var in JavaScript\" open=\"n\"]</p>\n\n<p>If you're in the global scope then there's no difference. If you're in a function then \"var\" will create a local variable, \"no var\" will look up the scope chain until it finds the variable or hits the global scope (at which point it will create it)</p>  \n<p>reference: <a href=\"http://stackoverflow.com/questions/1470488/difference-between-using-var-and-not-using-var-in-javascript\" target=\"_blank\">Difference between using var and not using var in JavaScript</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"Explain the difference when using defer/async in a script tag\" open=\"n\"]\n<p><strong>defer</strong> Simply put: delaying script execution until the HTML parser has finished. A positive effect of this attribute is that the DOM will be available for your script. However, since not every browser supports defer yet, don’t rely on it!<br/>  \n<strong>async</strong> Don’t care when the script will be available? Asynchronous is the best of both worlds: HTML parsing may continue and the script will be executed as soon as it’s ready. I’d recommend this for scripts such as Google Analytics.  \n</p>  \n\n<p>reference: <a href=\"http://peter.sh/experiments/asynchronous-and-deferred-javascript-execution-explained/\" target=\"_blank\">Peter Berloo</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"Difference between == and ===\" open=\"n\"]\n<p><strong>short answer:</strong>The identity (===) operator behaves identically to the equality (==) operator except no type conversion is done, and the types must be the same to be considered equal.  \n<strong>more detailed answer:</strong>  \nJavaScript has two sets of equality operators: === and !==, and their evil twins == and !=. The good ones work the way you would expect. If the two operands are of the same type and have the same value, then === produces true and !== produces false. The evil twins do the right thing when the operands are of the same type, but if they are of different types, they attempt to coerce the values. The rules by which they do that are complicated and unmemorable. These are some of the interesting cases:  \n<code>  \n'' == '0' // false  \n0 == '' // true  \n0 == '0' // truefalse == 'false' // false  \nfalse == '0' // truefalse == undefined // false  \nfalse == null // false  \nnull == undefined // true\n\n' \\\\t\\\\r\\\\n ' == 0 // true  \n</code>  \nThe lack of transitivity is alarming. My advice is to never use the evil twins. Instead, always use === and !==. All of the comparisons just shown produce false with the === operator  \n</p>  \n\n<p>references  \n  <ul>\n    <li>\n      <a title=\"Javascript Tutorial: Comparison Operators\" href=\"http://www.c-point.com/javascript_tutorial/jsgrpComparison.htm\" target=\"_blank\">Javascript Tutorial: Comparison Operators</a></li>\n    <li>\n    <li>\n      <a title=\"JavaScript: The Good Parts\" href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" target=\"_blank\">JavaScript: The Good Parts</a>\n    </li>\n  </ul>\n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"How to check if a variable is null or undefined\" open=\"n\"]</p>\n\n<p>  \nYou can just check if the variable has a truthy value or not. That means  \n<code>  \n  if( value ) {\n  }\n</code>  \nwill evaluate to true if value is not:  \n<code>null</code>  \n<code>undefined</code>  \n<code>NaN</code>  \n<code>empty string (\"\")</code>  \n<code>0</code>  \n<code>false</code>  \n</p>  \n\n<p>reference: <a href=\"http://stackoverflow.com/questions/5515310/is-there-a-standard-function-to-check-for-null-undefined-or-blank-variables-in\">Is there a standard function to check for null, undefined, or blank variables in JavaScript?</a>  \n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"How do you check is a variable is an object?\" open=\"n\"]</p>\n\n<p>Either use <strong>typeof</strong> of underscore's <strong>isObject</strong></p>  \n<p>references  \n  <ul>\n  <li><a href=\"http://tobyho.com/2011/01/28/checking-types-in-javascript/\">Checking types in javascript</a></li>\n  <li><a href=\"http://underscorejs.org/#isObject\">_.isObject()</a></li>\n  </ul>\n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"What is <em>strict mode</em> in javascript?\" open=\"n\"]</p>\n\n<p>  \nStrict mode makes several changes to normal JavaScript semantics. First, strict mode eliminates some JavaScript silent errors by changing them to throw errors. Second, strict mode fixes mistakes that make it difficult for JavaScript engines to perform optimizations: strict mode code can sometimes be made to run faster than identical code that's not strict mode. Third, strict mode prohibits some syntax likely to be defined in future versions of ECMAScript.  \n</p>  \n\n<p>reference <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode\">  \nStrict mode @mozilla-dev-network</a>  \n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"How do you debug in javascript?\" open=\"n\"]</p>\n\n<p>using debugging tools such as <em>chrome developer tools</em>, <em>mozilla debugger</em>, etc</p>  \n<p>references  \n  <ul>\n    <li><a href=\"https://developers.google.com/chrome-developer-tools/docs/javascript-debugging\">Chrome developer tools</a></li>\n    <li><a href=\"https://developer.mozilla.org/es/docs/Tools/Debugger\">Mozilla debugger</a></li>\n  </ul>\n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"What is JSLint?\" open=\"n\"]</p>\n\n<p>  \nJSLint is a static code analysis tool used in software development for checking if JavaScript source code complies with coding rules. It was developed by Douglas Crockford. It is provided primarily as an online tool, but there are also command-line adaptations.<br/>  \nJSLint by default warns of multiple var declarations, and suggests that they be combined (eg. var a=1, b=2, c=3...) Some consider this less readable than having a var statement for each new variable. When the commas between declarations are at the end of a line, they could easily be omitted, making the variable global scope (a coding error that strict mode will warn about).  \n<code>  \n  var a=1,\n  b=2, // missing comma here would be hard to catch.\n  c=3;\n</code>  \nA more readable and reliable formation may be used:  \n<code>  \nvar a=1  \n  , b=2\n  , c=3;\n</code>  \n</p>  \n\n<p>  \nreferences  \n<ul>  \n  <li><a href=\"http://www.jslint.com/\">JSLint</a></li>\n  <li><a href=\"http://en.wikipedia.org/wiki/JSLint\">Wikipedia</a></li>\n</ul>  \n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"How do you add a script to a page?\" open=\"n\"]</p>\n\n<p>  \nTo insert a JavaScript into an HTML page, use the &lt;script type=\"text/javascript\"&gt; tag. The &lt;script&gt; and &lt;/script&gt; tells where the JavaScript starts and ends. The lines between the &lt;script type=\"text/javascript\"&gt; and &lt;/script&gt; contain the JavaScript:  \n<code>  \n&lt;script type=\"text/javascript\"&gt;\nalert(\"My First JavaScript\");  \n&lt;/script&gt;\n</code>  \nJavaScripts can be put in the &lt;head&gt; and in the &lt;body&gt; section of an HTML page.  \n</p>  \n\n<p>  \nreference <a href=\"http://www.w3schools.com/js/js_howto.asp\">w3school</a>  \n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"Differences between <code>window.onload</code> and <code>onDocumentReady</code>?\" open=\"n\"]</p>\n\n<p>  \nBoth functions are used to perform tasks when the page is loaded in the browser but they have important differences. Most importantly, “window.onload” will execute code when browser has loaded the DOM tree and all other resources like images, objects, etc, while onDocumentReady allows you to execute code when only the DOM tree has been built, without waiting for images to load. Thus, you can start scripting agains the DOM much quicker with onDocumentReady. Another important difference is that window.onload is not cross-browser compatible while using something like jQuery’s document.ready() will work nicely on all browsers.  \n</p>  \n\n<p>  \nreference <a href=\"http://rmdarimd.wordpress.com/2011/10/05/what-is-the-main-difference-between-window-onload-and-ondocumentready/\">RMDARIMD blog</a>  \n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"Where is better to add the script, header or footer? why?\" open=\"n\"]</p>\n\n<p>Put them at the footer.</p>  \n<p>reference <a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\">Best Practices for Speeding Up Your Web Site</a></p>  \n[/bc_collapse]\n\n[bc_collapse title='What is the result of \"1\"+2+4? 5+4+\"3\"?' open=\"n\"]\n<p>  \n<code>  \n  \"1\"+2+4 = 124\n  5+4+\"3\" = 93\n</code>  \n</p>  \n\n<p>reference <a href=\"http://www.w3schools.com/js/js_operators.asp\">w3school</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"Difference between <code>undefined</code> and <code>null</code>?\" open=\"n\"]\n<p>  \nIn JavaScript, undefined means a variable has been declared but has not yet been assigned a value, such as:  \n<code>  var TestVar;  \n  alert(TestVar); //shows undefined\n  alert(typeof TestVar); //shows undefined </code>\nnull is an assignment value. It can be assigned to a variable as a representation of no value:  \n<code>  var TestVar = null;  \n  alert(TestVar); //shows null\n  alert(typeof TestVar); //shows object</code>\n\nFrom the preceding examples, it is clear that undefined and null are two distinct types: undefined is a type itself (undefined) while null is an object.  \n</p>  \n\n<p>reference <a href=\"http://stackoverflow.com/questions/5076944/what-is-the-difference-between-null-and-undefined-in-javascript\">stackoverflow</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"How can you change the class or style of an element with javascript?\" open=\"n\"]\n<p>  \nThe standard JavaScript way to select an element is using document.getElementById(\"Id\"), which is what the following examples use - you can of course obtain elements in other ways, and in the right situation may simply use this instead - however, going into detail on this is beyond the scope of the answer.</code></code>To change all classes for an element:\n\nTo replace all existing classes with one or more new classes, set the className attribute:  \n<code>  document.getElementById(\"MyElement\").className = \"MyClass\";</code>  \n</p>  \n\n<p> reference <a href=\"http://stackoverflow.com/questions/195951/change-an-elements-css-class-with-javascript/6960449#6960449\">stackoverflow</a>  \n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"What is <em>non obtrusive</em> javascript?\" open=\"n\"]</p>\n\n<p>  \nUnobtrusive JavaScript is a general approach to the use of JavaScript in web pages. Though the term is not formally defined, its basic principles are generally understood to include:  \n<ul>  \n<li>Separation of functionality (the \"behavior layer\") from a Web page's structure/content and presentation</li>  \n<li>Best practices to avoid the problems of traditional JavaScript programming (such as browser inconsistencies and lack of scalability)</li>  \n<li>Progressive enhancement to support user agents that may not support advanced JavaScript functionality</li>  \n</ul>  \n</p>  \n\n<p>reference <a href=\"http://en.wikipedia.org/wiki/Unobtrusive_JavaScript\">wikipedia</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"How to use <em>namespaces</em> in javascript?\" open=\"n\"]\n<p>  \nIn most programming languages we know the concept of namespaces (or packages). Namespaces allow us to group code and help us to avoid name-collisions.Unfortunately, the concept of namespaces does not exist in JavaScript. To add insult to injury, everything you create in JavaScript is by default global. Now obviously, this is a recipe for disaster, especially since in any modern application you’ll probably end upll using third-party components.  \n</p>  \n\n<p>reference <a href=\"http://www.kenneth-truyers.net/2013/04/27/javascript-namespaces-and-modules/\">javascript namespaces and modules (MUST READ)</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"What type of data javascript supports?\" open=\"n\"]\n<p>String, Number, Boolean, Array, Object, Null, Undefined.</p>  \n<p>reference <a href=\"http://www.w3schools.com/js/js_datatypes.asp\">reference w3school</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"Difference between <code>innerHTML</code> and <code>append</code>?\" open=\"n\"]\n<p>  \nInnerHTML is a string and it’s not standard. Even though innerHTML is faster it is better to use the DOM methods such as appendChild() or firstChild or nodeValue, to change innerHTML content. Append() method is slower but more reliable. Plus, to append using innerHTML you need to use += operator  \n</p>  \n\n<p>[/bc_collapse]</p>\n\n<p>[bc_collapse title=\"How do you create an object in javascript?\" open=\"n\"]\nThe following example creates a new instance of an object, and adds four properties to it: <br />\n<code>person=new Object(); <br />\nperson.firstname=\"John\"; <br />\nperson.lastname=\"Doe\"; <br />\nperson.age=50; <br />\nperson.eyecolor=\"blue\"; <br />\n</code> <br />\nAlternative syntax (using object literals): <br />\n<code>person={firstname:\"John\",lastname:\"Doe\",age:50,eyecolor:\"blue\"};</code> <br />\n</p>  </p>\n\n<p>reference <a href=\"http://www.w3schools.com/js/js_objects.asp\">w3school</a></p>  \n[/bc_collapse]\n\n[bc_collapse title=\"Is javascript and object oriented language? if so, why?\" open=\"n\"]\n<p>  \nJavaScript does have objects. I would say it's a hybrid: interpreted, functional, object-oriented, and dynamic.I think these characteristics are very important, indeed. They are what makes it a good language, one that's more important every day. JavaScript has strong object-oriented programming capabilities, even though some debates have taken place due to the differences in object-oriented JavaScript compared to other languages.  \n</p>  \n\n<p><p>reference <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript\">mozilla developer network</a> <br />\n[/bc_collapse]</p>\n\n<p>[/bc_group]</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389657392394,"created_by":1,"updated_at":1389657392394,"updated_by":1,"published_at":null,"published_by":null},{"id":4,"uuid":"d1324b52-a560-4e3d-991d-b0383ca5caa8","title":"I'm a ghost ... fan","slug":"im-a-ghost-fan","markdown":"![](/content/images/2014/Jan/halloween_ghost.png)\n\n# Here we are ... ghosts\nTired of the *monster* I had to use fo my personal blog - wordpress - I started my perosonal SoTA about blogging systems based on javascript (node.js, meteor, etc.)\n\nAnd I ended up finding, what I personally think, it's a pretty promising blogging platform. It's easy to use, light and based on node.js\n\n**[Ghost](http://ghost.org)**\n> Ghost is a platform dedicated to one thing: Publishing. It's beautifully designed, completely customisable and completely Open Source. Ghost allows you to write and publish your own blog, giving you the tools to make it easy and even fun to do. It's simple, elegant, and designed so that you can spend less time messing with making your blog work - and more time blogging.\n\nNow I cannot wait to start building my own theme and contribute with plugins or code in general. I'll keep you posted.","html":"<p><img src=\"/content/images/2014/Jan/halloween_ghost.png\" alt=\"\" /></p>\n\n<h1 id=\"hereweareghosts\">Here we are ... ghosts</h1>\n\n<p>Tired of the <em>monster</em> I had to use fo my personal blog - wordpress - I started my perosonal SoTA about blogging systems based on javascript (node.js, meteor, etc.)</p>\n\n<p>And I ended up finding, what I personally think, it's a pretty promising blogging platform. It's easy to use, light and based on node.js</p>\n\n<p><strong><a href=\"http://ghost.org\">Ghost</a></strong></p>\n\n<blockquote>\n  <p>Ghost is a platform dedicated to one thing: Publishing. It's beautifully designed, completely customisable and completely Open Source. Ghost allows you to write and publish your own blog, giving you the tools to make it easy and even fun to do. It's simple, elegant, and designed so that you can spend less time messing with making your blog work - and more time blogging.</p>\n</blockquote>\n\n<p>Now I cannot wait to start building my own theme and contribute with plugins or code in general. I'll keep you posted.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389777359258,"created_by":1,"updated_at":1391220548921,"updated_by":1,"published_at":1389777359270,"published_by":1},{"id":5,"uuid":"8ac41a4a-f10c-44c1-80a7-b4f94ad83651","title":"Setting up my blog using Git","slug":"setting-up-my-blog-using-git","markdown":"![Git](/content/images/2015/02/git.png)\n\nWhen you use Git, the workflow generally is toward version control only. You have a local repository where you work and a remote repository where you keep everything in sync and can work with a team and different machines. But you can also use Git to move your application to production.\n\n**Server Setup**\n\n- `live directory: /var/www/ghost`\n- `repository: ~/repository`\n\n\nWhat should we do if **we want to push to the git repository and at the same time make all the content available** at /var/www/ghost?\n\n###Creating Our Repository\nLogin to your VPS from command line and type the following:\n\n- `cd ~`\n- `mkdir repository && cd repository`\n- `git init --bare`\n\n*--bare* means that our folder will have no source files, just the version control.\n\n####Hooks\nGit repositories have a folder called 'hooks'. This folder contains some sample files for possible actions that you can hook and perform custom actions set by you.\n\nGit documentation define three possible server hooks\n\n- pre-receive: is executed as soon as the server receives a 'push'\n- post-receive: is executed when a 'push' is completely finished and it's the one we are interested in\n- update: is similar but it executes once for each branch\n\nIn our repository if you type: `ls`\nYou will see a few files and folders, including the *hooks* folder. So let's go to *hooks* folder: `cd hooks`\nNow, create the file *post-receive* by typing: `cat > post-receive`\nWhen you execute this command, you will have a blank line indicating that everything you type will be saved to this file. So let's type:\n`#!/bin/sh\ngit --work-tree=/var/www/ghost --git-dir=~/repository checkout -f\nchown -R ghost:ghost /var/www/ghost\nservice ghost restart`\nWhen you finish typing, press 'control-d' to save.\nIn order to execute the file, we need to set the proper permissions using: `chmod +x post-receive`\n\nYou can see on the documentation that *git-dir* is the path to the repository. With *work-tree*, you can define a different path to where your files will actually be transferred to.\n\nThe *post-receive* file will be looked into every time a push is completed and it's saying that your files need to be in /var/www/ghost.\n\n####Local Machine\nLet's create our local repository.\n\n- `cd ~/dev/site`\n- `mkdir ghost && cd ghost`\n- `git init`\n\nTo configure the remote path of the repository. Tell Git to add a remote called 'live'\n`git remote add live ssh://user@mydomain.com/repository`\n\n(skipped the installation of ghost in my local env).\n\nNow, add the content of the local site.\n\n- `git add .`\n- `git commit -m \"My project is ready\"`\n\nTo complete, we just 'push' everything to the server. We use the 'live' alias that we used when setting the remote: `git push live master`\n\n`Counting objects: 7, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (7/7), done.\nWriting objects: 100% (7/7), 10.56 KiB, done.\nTotal 7 (delta 0), reused 0 (delta 0)\nTo ssh://user@mydomain.com/repository\n* [new branch]      master -> master\n`\n\nCongratulations! Your VPS is now set to automatically deploy with Git!","html":"<p><img src=\"/content/images/2015/02/git.png\" alt=\"Git\" /></p>\n\n<p>When you use Git, the workflow generally is toward version control only. You have a local repository where you work and a remote repository where you keep everything in sync and can work with a team and different machines. But you can also use Git to move your application to production.</p>\n\n<p><strong>Server Setup</strong></p>\n\n<ul>\n<li><code>live directory: /var/www/ghost</code></li>\n<li><code>repository: ~/repository</code></li>\n</ul>\n\n<p>What should we do if <strong>we want to push to the git repository and at the same time make all the content available</strong> at /var/www/ghost?</p>\n\n<h3 id=\"creatingourrepository\">Creating Our Repository</h3>\n\n<p>Login to your VPS from command line and type the following:</p>\n\n<ul>\n<li><code>cd ~</code></li>\n<li><code>mkdir repository &amp;&amp; cd repository</code></li>\n<li><code>git init --bare</code></li>\n</ul>\n\n<p><em>--bare</em> means that our folder will have no source files, just the version control.</p>\n\n<h4 id=\"hooks\">Hooks</h4>\n\n<p>Git repositories have a folder called 'hooks'. This folder contains some sample files for possible actions that you can hook and perform custom actions set by you.</p>\n\n<p>Git documentation define three possible server hooks</p>\n\n<ul>\n<li>pre-receive: is executed as soon as the server receives a 'push'</li>\n<li>post-receive: is executed when a 'push' is completely finished and it's the one we are interested in</li>\n<li>update: is similar but it executes once for each branch</li>\n</ul>\n\n<p>In our repository if you type: <code>ls</code> <br />\nYou will see a few files and folders, including the <em>hooks</em> folder. So let's go to <em>hooks</em> folder: <code>cd hooks</code> <br />\nNow, create the file <em>post-receive</em> by typing: <code>cat &gt; post-receive</code> <br />\nWhen you execute this command, you will have a blank line indicating that everything you type will be saved to this file. So let's type: <br />\n<code>#!/bin/sh\ngit --work-tree=/var/www/ghost --git-dir=~/repository checkout -f <br />\nchown -R ghost:ghost /var/www/ghost <br />\nservice ghost restart</code> <br />\nWhen you finish typing, press 'control-d' to save. <br />\nIn order to execute the file, we need to set the proper permissions using: <code>chmod +x post-receive</code></p>\n\n<p>You can see on the documentation that <em>git-dir</em> is the path to the repository. With <em>work-tree</em>, you can define a different path to where your files will actually be transferred to.</p>\n\n<p>The <em>post-receive</em> file will be looked into every time a push is completed and it's saying that your files need to be in /var/www/ghost.</p>\n\n<h4 id=\"localmachine\">Local Machine</h4>\n\n<p>Let's create our local repository.</p>\n\n<ul>\n<li><code>cd ~/dev/site</code></li>\n<li><code>mkdir ghost &amp;&amp; cd ghost</code></li>\n<li><code>git init</code></li>\n</ul>\n\n<p>To configure the remote path of the repository. Tell Git to add a remote called 'live' <br />\n<code>git remote add live ssh://user@mydomain.com/repository</code></p>\n\n<p>(skipped the installation of ghost in my local env).</p>\n\n<p>Now, add the content of the local site.</p>\n\n<ul>\n<li><code>git add .</code></li>\n<li><code>git commit -m \"My project is ready\"</code></li>\n</ul>\n\n<p>To complete, we just 'push' everything to the server. We use the 'live' alias that we used when setting the remote: <code>git push live master</code></p>\n\n<p><code>Counting objects: 7, done.\nDelta compression using up to 4 threads. <br />\nCompressing objects: 100% (7/7), done. <br />\nWriting objects: 100% (7/7), 10.56 KiB, done. <br />\nTotal 7 (delta 0), reused 0 (delta 0) <br />\nTo ssh://user@mydomain.com/repository <br />\n* [new branch]      master -&gt; master\n</code></p>\n\n<p>Congratulations! Your VPS is now set to automatically deploy with Git!</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389778108967,"created_by":1,"updated_at":1423067935931,"updated_by":1,"published_at":1391220229074,"published_by":1},{"id":6,"uuid":"9bad8b85-b995-4935-a2a6-4b5803fdf24c","title":"About Me","slug":"about-me","markdown":"![](/content/images/2014/Feb/cover_clean.jpg)\n\nWho am I? Not sure. I know I like my family, my friends, new technologies, coding and the typical stuff everyone would say (films, reading, blah, blah, blah).\n\nMy full name is **Francisco Calle Moreno**. I was born in Salamanca in 1977 ( you do the maths, I don't want to get depressed :-P ). I live in Loranca, a nice neighborhood in the south of Madrid (very very in the south).\n\nI'm what you'd describe as an *IT guy* - those ones that you'd phone up only when your laptop is broken, need assistance to *install* a new Windows version and so forth - though, what I really am is a passionate software developer. I've been a software developer even before the 2K effect ([remember?](http://en.wikipedia.org/wiki/Year_2000_problem)). That was ... long time.\n\nOne of my biggest hobbies is ... my profession. That's good because I keep myself updated but, on the other hand, I spend too many time *wired* and not doing other things, namely sports and going out. Either way, I love been up to date about the changes happening on the IT world and, when possible, apply them to the work I have to do.\n\nNowadays I'm ~~focused~~ obsessed with javascript, to be more precise, [Meteor](http://meteor.com). Also Node.js and, of course, Ghost.\n\nIf you want to find out more about me, please, click on my social networks icons.","html":"<p><img src=\"/content/images/2014/Feb/cover_clean.jpg\" alt=\"\" /></p>\n\n<p>Who am I? Not sure. I know I like my family, my friends, new technologies, coding and the typical stuff everyone would say (films, reading, blah, blah, blah).</p>\n\n<p>My full name is <strong>Francisco Calle Moreno</strong>. I was born in Salamanca in 1977 ( you do the maths, I don't want to get depressed :-P ). I live in Loranca, a nice neighborhood in the south of Madrid (very very in the south).</p>\n\n<p>I'm what you'd describe as an <em>IT guy</em> - those ones that you'd phone up only when your laptop is broken, need assistance to <em>install</em> a new Windows version and so forth - though, what I really am is a passionate software developer. I've been a software developer even before the 2K effect (<a href=\"http://en.wikipedia.org/wiki/Year_2000_problem\">remember?</a>). That was ... long time.</p>\n\n<p>One of my biggest hobbies is ... my profession. That's good because I keep myself updated but, on the other hand, I spend too many time <em>wired</em> and not doing other things, namely sports and going out. Either way, I love been up to date about the changes happening on the IT world and, when possible, apply them to the work I have to do.</p>\n\n<p>Nowadays I'm <del>focused</del> obsessed with javascript, to be more precise, <a href=\"http://meteor.com\">Meteor</a>. Also Node.js and, of course, Ghost.</p>\n\n<p>If you want to find out more about me, please, click on my social networks icons.</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1379208025000,"created_by":1,"updated_at":1435650883421,"updated_by":1,"published_at":1379208025000,"published_by":1},{"id":7,"uuid":"bc6ff647-afbc-400a-9768-5431f75b1e76","title":"Setting up a cool desktop","slug":"setting-up-a-cool-desktop","markdown":"![My desktop](/content/images/2014/Feb/geektool_desktop_numbers.png)\nToday I'm going to tell you how I did set up my desktop so it ended up looking like the image.\n\nThe first step is to download [Geektool](http://projects.tynsoe.org/en/geektool/download.php), ruby a these rubygems \n`sparklines, gruff, rexml/document, trollop, fileutils, cgi, net/http, rss/2.0, open-uri, sqlite3`\n\nOnce you have installed them, you'll need to download some scripts from my github repository [here](http://bit.ly/WtSeOj).\n\nI'll be using my local path as an example ( so that I don't need to rewrite everithing 8) ) - no need to use the same path. I have everything under **~/Development/geektool**. Now you have to star adding *geeklets* to your desktop. I'll be following the numbering on the image.\n\n### #1-Weather & date\n- Sun image: Image geeklet. \n\t- Code `location:file://localhost~/Development/geektool/yahooweather/yahooweather.png`\n    - Config\n    \t- 120s refresh rate\n- Wheather information: Script geeklets\n\t- Code:\n    \t- `cat ~/Development/geektool/yahooweather/sun`\n        - `cat ~/Development/geektool/yahooweather/humidity`\n        - `cat ~/Development/geektool/yahooweather/wind`\n        - `cat ~/Development/geektool/yahooweather/termic`\n    - Config\n    \t- 120s refresh rate\n        - Font is [Timotheos font](http://www.dafont.com/es/timotheos.font)\n- Date & time: Script geeklets\n\t- Code\n    \t- day: `date +%d`\n        - month: `date +%B`\n        - day of the week: `date +%A`\n        - time: `date '+%I:%M %p'`\n    - Config\n    \t- Date, refresh rate 5s\n        - Time, refresh rate 3600s\n        - Font is [Chicken butt](http://www.dafont.com/chicken-butt.font)\n\n### #2-Wunderlist\n**UPDATE 3 February 2014** I'm not longer using Wunderlist so this geeklet is discontinued.\n\n**UPDATE 9 September 2013** Due to some changes the wunderlist client has suffered, you need to locate the SQLite3 file location. The one used in this post may not be acurate.\n\nFor this geeklet, you'll need to use the desktop version of [wunderlist](https://www.wunderlist.com/). Add a script geeklet for this ruby script `ruby ~/Development/geektool/wunderlist/wunderlist.rb` refreshing every 300s and with a monospace font like AndaleMono. But **remeber to double check the location of the wunderlist database** inside the script, it's something like `~/Library/Wunderlist/wunderlist.db`\n\n### #3-System information\nFour script geeklets, again monospaced font like AndaleMono.\n\n- system information\n\t- code: `scutil --get ComputerName; sw_vers | awk -F':\\\t' '{print $2}' | paste -d ' ' - - -; sysctl -n hw.memsize | awk '{print $0/1073741824\" GB RAM\"}'; sysctl -n machdep.cpu.brand_string;`\n    - config: no refresh rate\n- uptime\n\t-code: `sh ~/Development/geektool/system/uptime.sh`\n    - config: refresh every 60s\n- external ip\n\t-code: `sh ~/Development/geektool/system/network/externalip.sh`\n    - refresh every 60s\n- top by memory\n\t- code: `ps -amcwwwxo \"command %mem %cpu\" | grep -v grep | head -10`\n    - refresh every 2s\n\n### #4-Running scripts\nThese scripts produce the outputs used by section #1 and #6. They also shows us the status using a little image in the top left corner indicating if the script is running with/without errors. Remember to click on the *Display status feedback image* and override text (put whichever you prefer).\n\n- yahoo weather script\n\t- code: `sh ~/Development/geektool/yahooweather/yahooweather.sh`\n    - config: 300s refresh and 100s timeout\n- random photo generator\n\t- code: `sh ~/Development/geektool/framedphoto/framedphoto.sh &amp;&gt; /tmp/framedphoto.log`\n    - config: 60s refresh and 300s timeout\n\nThe **random photo generator** takes photos from a given location and generated a new image file with a polaroid like frame (the one you can see in section #6). The image files are **required** to be stored in a **folder structure like** this *year-month* for the script to work. You also have to **change the location inside the script** (line #68: SOURCEPHOTOSPATH=~/Pictures/Picasa). Finally, ImageMagick is needed. I've installed using [macports](http://trac.macports.org/wiki/InstallingMacPorts) `sudo port install ImageMagick` but I'm pretty sure you can do it with Brew or any other alternative.\n\n### #5-Network performance\nThis section is composed by 2 static images, 2 dynamic ones and 2 scripts.\n\n- The static images (wifi and ethernet icons) are image geeklets with no refresh:\n\t- `file://localhost~/Development/geektool/system/img/wifi.png`\n    - `file://localhost~/Development/geektool/system/img/ethernet.png`\n\n- The scripts with 3s refresh and a monospaced font\n\t- `sh ~/Development/geektool/system/network/wirelessinfo.sh`\n\t- `sh ~/Development/geektool/system/network/ethernetinfo.sh`\n\n- The dynamic images with 2s refresh are\n\t- `file://localhost/~/Development/geektool/system/graphs/network/wireless.png`\n\t- `file://localhost/~/Development/geektool/system/graphs/network/ethernet.png`\n\n### #6-Random photo\nHere we uso no script since the one that produces this output is in section #4. So we will add \n\t- an image geeklet with 25s refresh for the framed photo located in `file://localhost/tmp/geektool/framedphoto/framedphoto.jpg`\n    - one script geeklet with no refresh with this command: `echo \"Fotos del año\"`(sorry, it's in spanish :? )\n    - one script geeklet with 10s refresh with this command: `cat /tmp/geektool/framedphoto/year`\n    \nThe font is the same used for the weather, Timotheos.\n\n### #7-Calendar section\nThis is a **script geeklet** with 3600s refresh and a monospaced font, Monaco in this case. The script is `sh ~/Development/geektool/date/montcal.sh`\n\n\n... and there you are. Piece of cake, isn't it?","html":"<p><img src=\"/content/images/2014/Feb/geektool_desktop_numbers.png\" alt=\"My desktop\" />\nToday I'm going to tell you how I did set up my desktop so it ended up looking like the image.</p>\n\n<p>The first step is to download <a href=\"http://projects.tynsoe.org/en/geektool/download.php\">Geektool</a>, ruby a these rubygems <br />\n<code>sparklines, gruff, rexml/document, trollop, fileutils, cgi, net/http, rss/2.0, open-uri, sqlite3</code></p>\n\n<p>Once you have installed them, you'll need to download some scripts from my github repository <a href=\"http://bit.ly/WtSeOj\">here</a>.</p>\n\n<p>I'll be using my local path as an example ( so that I don't need to rewrite everithing 8) ) - no need to use the same path. I have everything under <strong>~/Development/geektool</strong>. Now you have to star adding <em>geeklets</em> to your desktop. I'll be following the numbering on the image.</p>\n\n<h3 id=\"1weatherdate\">#1-Weather &amp; date</h3>\n\n<ul>\n<li>Sun image: Image geeklet. \n<ul><li>Code <code>location:file://localhost~/Development/geektool/yahooweather/yahooweather.png</code></li>\n<li>Config\n<ul><li>120s refresh rate</li></ul></li></ul></li>\n<li>Wheather information: Script geeklets\n<ul><li>Code:\n<ul><li><code>cat ~/Development/geektool/yahooweather/sun</code></li>\n<li><code>cat ~/Development/geektool/yahooweather/humidity</code></li>\n<li><code>cat ~/Development/geektool/yahooweather/wind</code></li>\n<li><code>cat ~/Development/geektool/yahooweather/termic</code></li></ul></li>\n<li>Config\n<ul><li>120s refresh rate</li>\n<li>Font is <a href=\"http://www.dafont.com/es/timotheos.font\">Timotheos font</a></li></ul></li></ul></li>\n<li>Date &amp; time: Script geeklets\n<ul><li>Code\n<ul><li>day: <code>date +%d</code></li>\n<li>month: <code>date +%B</code></li>\n<li>day of the week: <code>date +%A</code></li>\n<li>time: <code>date '+%I:%M %p'</code></li></ul></li>\n<li>Config\n<ul><li>Date, refresh rate 5s</li>\n<li>Time, refresh rate 3600s</li>\n<li>Font is <a href=\"http://www.dafont.com/chicken-butt.font\">Chicken butt</a></li></ul></li></ul></li>\n</ul>\n\n<h3 id=\"2wunderlist\">#2-Wunderlist</h3>\n\n<p><strong>UPDATE 3 February 2014</strong> I'm not longer using Wunderlist so this geeklet is discontinued.</p>\n\n<p><strong>UPDATE 9 September 2013</strong> Due to some changes the wunderlist client has suffered, you need to locate the SQLite3 file location. The one used in this post may not be acurate.</p>\n\n<p>For this geeklet, you'll need to use the desktop version of <a href=\"https://www.wunderlist.com/\">wunderlist</a>. Add a script geeklet for this ruby script <code>ruby ~/Development/geektool/wunderlist/wunderlist.rb</code> refreshing every 300s and with a monospace font like AndaleMono. But <strong>remeber to double check the location of the wunderlist database</strong> inside the script, it's something like <code>~/Library/Wunderlist/wunderlist.db</code></p>\n\n<h3 id=\"3systeminformation\">#3-System information</h3>\n\n<p>Four script geeklets, again monospaced font like AndaleMono.</p>\n\n<ul>\n<li>system information\n<ul><li>code: <code>scutil --get ComputerName; sw_vers | awk -F':\\ ' '{print $2}' | paste -d ' ' - - -; sysctl -n hw.memsize | awk '{print $0/1073741824\" GB RAM\"}'; sysctl -n machdep.cpu.brand_string;</code></li>\n<li>config: no refresh rate</li></ul></li>\n<li>uptime\n-code: <code>sh ~/Development/geektool/system/uptime.sh</code>\n<ul><li>config: refresh every 60s</li></ul></li>\n<li>external ip\n-code: <code>sh ~/Development/geektool/system/network/externalip.sh</code>\n<ul><li>refresh every 60s</li></ul></li>\n<li>top by memory\n<ul><li>code: <code>ps -amcwwwxo \"command %mem %cpu\" | grep -v grep | head -10</code></li>\n<li>refresh every 2s</li></ul></li>\n</ul>\n\n<h3 id=\"4runningscripts\">#4-Running scripts</h3>\n\n<p>These scripts produce the outputs used by section #1 and #6. They also shows us the status using a little image in the top left corner indicating if the script is running with/without errors. Remember to click on the <em>Display status feedback image</em> and override text (put whichever you prefer).</p>\n\n<ul>\n<li>yahoo weather script\n<ul><li>code: <code>sh ~/Development/geektool/yahooweather/yahooweather.sh</code></li>\n<li>config: 300s refresh and 100s timeout</li></ul></li>\n<li>random photo generator\n<ul><li>code: <code>sh ~/Development/geektool/framedphoto/framedphoto.sh &amp;amp;&amp;gt; /tmp/framedphoto.log</code></li>\n<li>config: 60s refresh and 300s timeout</li></ul></li>\n</ul>\n\n<p>The <strong>random photo generator</strong> takes photos from a given location and generated a new image file with a polaroid like frame (the one you can see in section #6). The image files are <strong>required</strong> to be stored in a <strong>folder structure like</strong> this <em>year-month</em> for the script to work. You also have to <strong>change the location inside the script</strong> (line #68: SOURCEPHOTOSPATH=~/Pictures/Picasa). Finally, ImageMagick is needed. I've installed using <a href=\"http://trac.macports.org/wiki/InstallingMacPorts\">macports</a> <code>sudo port install ImageMagick</code> but I'm pretty sure you can do it with Brew or any other alternative.</p>\n\n<h3 id=\"5networkperformance\">#5-Network performance</h3>\n\n<p>This section is composed by 2 static images, 2 dynamic ones and 2 scripts.</p>\n\n<ul>\n<li><p>The static images (wifi and ethernet icons) are image geeklets with no refresh:</p>\n\n<ul><li><code>file://localhost~/Development/geektool/system/img/wifi.png</code></li>\n<li><code>file://localhost~/Development/geektool/system/img/ethernet.png</code></li></ul></li>\n<li><p>The scripts with 3s refresh and a monospaced font</p>\n\n<ul><li><code>sh ~/Development/geektool/system/network/wirelessinfo.sh</code></li>\n<li><code>sh ~/Development/geektool/system/network/ethernetinfo.sh</code></li></ul></li>\n<li><p>The dynamic images with 2s refresh are</p>\n\n<ul><li><code>file://localhost/~/Development/geektool/system/graphs/network/wireless.png</code></li>\n<li><code>file://localhost/~/Development/geektool/system/graphs/network/ethernet.png</code></li></ul></li>\n</ul>\n\n<h3 id=\"6randomphoto\">#6-Random photo</h3>\n\n<p>Here we uso no script since the one that produces this output is in section #4. So we will add <br />\n    - an image geeklet with 25s refresh for the framed photo located in <code>file://localhost/tmp/geektool/framedphoto/framedphoto.jpg</code>\n    - one script geeklet with no refresh with this command: <code>echo \"Fotos del año\"</code>(sorry, it's in spanish :? )\n    - one script geeklet with 10s refresh with this command: <code>cat /tmp/geektool/framedphoto/year</code></p>\n\n<p>The font is the same used for the weather, Timotheos.</p>\n\n<h3 id=\"7calendarsection\">#7-Calendar section</h3>\n\n<p>This is a <strong>script geeklet</strong> with 3600s refresh and a monospaced font, Monaco in this case. The script is <code>sh ~/Development/geektool/date/montcal.sh</code></p>\n\n<p>... and there you are. Piece of cake, isn't it?</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1391422484129,"created_by":1,"updated_at":1391425338789,"updated_by":1,"published_at":1391422498658,"published_by":1},{"id":8,"uuid":"bf74c947-ffb6-44e7-839b-6d7c92364015","title":"Meteor evangelization","slug":"meteor-evangelization","markdown":"<iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/HcfTpcql5R4\"></iframe>\n\nYesterday was a great day. I've been doing some dissemination about [Meteor.js](http://www.meteor.com) and how great is this framework.\n\nHere are the links of the material I've created for the event.\n\n* [Introducción a Meteor](https://slid.es/franciscocallemoreno/meteor-madrid-meetup)\n* [Introduction to Meteor](https://slid.es/franciscocallemoreno/meteor-madrid-meetup--2)\n* [How we've applied meteor to BIVEE](https://slid.es/franciscocallemoreno/bivee-meteor)\n* [Small demo application](https://github.com/bitIO/meteor-madrid-meetup)\n\nRemember, you can use or fork those resources. Enjoy.","html":"<iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/HcfTpcql5R4\"></iframe>\n\n<p>Yesterday was a great day. I've been doing some dissemination about <a href=\"http://www.meteor.com\">Meteor.js</a> and how great is this framework.</p>\n\n<p>Here are the links of the material I've created for the event.</p>\n\n<ul>\n<li><a href=\"https://slid.es/franciscocallemoreno/meteor-madrid-meetup\">Introducción a Meteor</a></li>\n<li><a href=\"https://slid.es/franciscocallemoreno/meteor-madrid-meetup--2\">Introduction to Meteor</a></li>\n<li><a href=\"https://slid.es/franciscocallemoreno/bivee-meteor\">How we've applied meteor to BIVEE</a></li>\n<li><a href=\"https://github.com/bitIO/meteor-madrid-meetup\">Small demo application</a></li>\n</ul>\n\n<p>Remember, you can use or fork those resources. Enjoy.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392892952961,"created_by":1,"updated_at":1407334529126,"updated_by":1,"published_at":1392892973790,"published_by":1},{"id":9,"uuid":"14ee6f91-7f4d-424f-a0db-c481399ca55e","title":"SublimeText3 + TernJS + meteor-tern","slug":"sublimetext3-ternjs-meteor-tern","markdown":"<iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/5cAHxpNEHTc\" frameborder=\"0\" allowfullscreen></iframe>\n\nLast few weeks I've been googling on how could I enable autocompletion on my SublimeText3 for my meteor projects. Altough I don't like this kind of behavior in my text editor ( I like it the way it comes + a little amount of plugins ), sometimes it feels necesary to have functionalities such as **jump to definition** or **autocompletion with parameters**.\n\nSo, I've been doing some research and finally got it working on my Mac. Here are the steps I've followed\n\n1. Cloned [sublime-tern](https://github.com/emmetio/sublime-tern) into my ST3 packages folder (`~/Library/Application Support/Sublime Text 3/Packages`). It can be installed using Package Control but it downloads it as a binary :_(\n2. Go to the cloned folder and go to `sublime-tern/ternjs/plugin` and download the *meteor.js* definition from [Slava's repo](https://raw.github.com/Slava/tern-meteor/master/meteor.js)\n3. Start a new meteor project and edit the project defintionby adding this:\n<pre class=\"language-javascript line-numbers\"><code>{\n\t\"folders\": [\n    \t... don't touch this part, leave it as it was\n     ],\n     // add this! ternjs object\n     \"ternjs\": {\n     \t\"libs\": [\"browser\", \"underscore\", \"jquery\"],\n        \"plugins\": {\n        \t\"meteor\": {}\n        }\n     }\n}</code></pre>\n\n4. Reload the whole thing, just in case.\n\n**P.S.**\nI found that I need to have the ST3 project file definition inside my root folder.","html":"<iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/5cAHxpNEHTc\" frameborder=\"0\" allowfullscreen></iframe>\n\n<p>Last few weeks I've been googling on how could I enable autocompletion on my SublimeText3 for my meteor projects. Altough I don't like this kind of behavior in my text editor ( I like it the way it comes + a little amount of plugins ), sometimes it feels necesary to have functionalities such as <strong>jump to definition</strong> or <strong>autocompletion with parameters</strong>.</p>\n\n<p>So, I've been doing some research and finally got it working on my Mac. Here are the steps I've followed</p>\n\n<ol>\n<li>Cloned <a href=\"https://github.com/emmetio/sublime-tern\">sublime-tern</a> into my ST3 packages folder (<code>~/Library/Application Support/Sublime Text 3/Packages</code>). It can be installed using Package Control but it downloads it as a binary :_(  </li>\n<li>Go to the cloned folder and go to <code>sublime-tern/ternjs/plugin</code> and download the <em>meteor.js</em> definition from <a href=\"https://raw.github.com/Slava/tern-meteor/master/meteor.js\">Slava's repo</a>  </li>\n<li>Start a new meteor project and edit the project defintionby adding this:  </li>\n</ol>\n\n<pre class=\"language-javascript line-numbers\"><code>{  \n    \"folders\": [\n        ... don't touch this part, leave it as it was\n     ],\n     // add this! ternjs object\n     \"ternjs\": {\n         \"libs\": [\"browser\", \"underscore\", \"jquery\"],\n        \"plugins\": {\n            \"meteor\": {}\n        }\n     }\n}</code></pre>\n\n<ol>\n<li>Reload the whole thing, just in case.</li>\n</ol>\n\n<p><strong>P.S.</strong>\nI found that I need to have the ST3 project file definition inside my root folder.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392912912610,"created_by":1,"updated_at":1407334526675,"updated_by":1,"published_at":1392912912695,"published_by":1},{"id":10,"uuid":"957065bc-4c5e-4f02-be7a-33eff3f9c841","title":"Javascript tools you should be using (I)","slug":"javascript-tools-you-should-be-using-i","markdown":"For a very long time I've been developing my projects using no methodology but my own knowledge and what I thought was correct. Those days are gone.\n\nFor a very long time I asked myself it there were any patterns and styleguide developers around the world follow. It turns out that there are tools that help you solve that issue. Today I'm going to write one of them: **[JSHint](http://jshint.com/)**\n\nJSHint is\n\n> A program that flags suspicious usage in programs written in JavaScript. The core project consists of a library itself as well as a CLI program distributed as a Node module.\n\nSo, first let's take a look on what the result of using JSHint could be. This gif is taken from an on-going project.\n\n-- insert image here\n\n#### The context\n\nTo ilustrate the use of JSHint I'm going to use\n\n* One of my on-going projects based on Meteor\n* Sublime Text 3 Beta (it's been a while since last update)\n* Atom.io ( looks like I'm going to have a new toy soon :-P )\n* Node.js installed on my Mac through Node Version Manager\n\n\n#### The steps\n\n#### The conclusions\n\n##### References\n* [http://www.ecma-international.org/ecma-262/5.1/](http://www.ecma-international.org/ecma-262/5.1/)\n* [Understanding Strict Mode in JavaScript](http://polyglotprogrammer.com/understanding-strict-mode-in-javascript/)\n* [Mozilla Development Network - Strict mode](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode)","html":"<p>For a very long time I've been developing my projects using no methodology but my own knowledge and what I thought was correct. Those days are gone.</p>\n\n<p>For a very long time I asked myself it there were any patterns and styleguide developers around the world follow. It turns out that there are tools that help you solve that issue. Today I'm going to write one of them: <strong><a href=\"http://jshint.com/\">JSHint</a></strong></p>\n\n<p>JSHint is</p>\n\n<blockquote>\n  <p>A program that flags suspicious usage in programs written in JavaScript. The core project consists of a library itself as well as a CLI program distributed as a Node module.</p>\n</blockquote>\n\n<p>So, first let's take a look on what the result of using JSHint could be. This gif is taken from an on-going project.</p>\n\n<p>-- insert image here</p>\n\n<h4 id=\"thecontext\">The context</h4>\n\n<p>To ilustrate the use of JSHint I'm going to use</p>\n\n<ul>\n<li>One of my on-going projects based on Meteor</li>\n<li>Sublime Text 3 Beta (it's been a while since last update)</li>\n<li>Atom.io ( looks like I'm going to have a new toy soon :-P )</li>\n<li>Node.js installed on my Mac through Node Version Manager</li>\n</ul>\n\n<h4 id=\"thesteps\">The steps</h4>\n\n<h4 id=\"theconclusions\">The conclusions</h4>\n\n<h5 id=\"references\">References</h5>\n\n<ul>\n<li><a href=\"http://www.ecma-international.org/ecma-262/5.1/\">http://www.ecma-international.org/ecma-262/5.1/</a></li>\n<li><a href=\"http://polyglotprogrammer.com/understanding-strict-mode-in-javascript/\">Understanding Strict Mode in JavaScript</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode\">Mozilla Development Network - Strict mode</a></li>\n</ul>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1407262210976,"created_by":1,"updated_at":1407262210976,"updated_by":1,"published_at":null,"published_by":null},{"id":11,"uuid":"7d473a47-3882-4f62-bd40-a8794cc79cf1","title":"Git, move content into a subdirectory","slug":"git-move-content-into-a-subdirectory","markdown":"![](/content/images/2014/Aug/git_filter_tree.png)\n\nI have recently found myself in the need to move all the content of a [Meteor](http://www.meteor.com) package I was building into another project keeping the history but rewriting the package location (from `/` => `/packages/<name of the package>`).\n\nTo do so, these are the steps I've followed:\n\n1. Pray to my *personal god* (google) and he/she/it delivered.\n\t* [Moving files from one git repository to another preserving history](http://gbayer.com/development/moving-files-from-one-git-repository-to-another-preserving-history/)\n    * [How can I rewrite history so that all files are in a subdirectory?](http://stackoverflow.com/questions/4042816/how-can-i-rewrite-history-so-that-all-files-are-in-a-subdirectory)\n    * [Accidentally pushed commit: change git commit message](http://stackoverflow.com/questions/5032374/accidentally-pushed-commit-change-git-commit-message)\n2. Create a test *repo-b* repository and started the process - first test, then do in real repositories.\n3. Clone - or copy if you already have it downloaded - the *repo-a*\n    * `cd repo-a`\n    * `git remote rm <remote name>` (you may have more that one remote, remove all of them)\n    * Rewrite the history to look like it always was inside the subdirectory. Following the first steps of the first tutorial, the rewrite didn't work. The git message was `nothing to rewrite`. So, finally I managed to do it using this *simple* command (from the sencond link)<pre class=\"brush: bash\">\ngit filter-branch --prune-empty --tree-filter '\nif [[ ! -e packages/repo-a-package ]]; then\nmkdir -p packages/repo-a-package\ngit ls-tree --name-only $GIT_COMMIT | xargs -I files mv files packages/repo-a-package\nfi'\n</pre>\n4. There was a commit message I wanted to be changed since it was *Initial commit* which now it's not true. It shloud be somthing like: *Initial commit of the package <name of the package>*. To change that message:<pre class=\"brush: bash\">\ngit filter-branch -f --msg-filter 'sed \"s/Initial commit/Initial commit of the package <name of the package>/g\"' -- --all\n</pre>\n5. Last step is to import the contents to the repo-b.<pre class=\"brush: bash;\">\ngit clone [git repository a url]\ncd [git repository b directory]\ngit remote add branch-repo-a [git repo-a directory]\ngit pull branch-repo-a master\ngit remote rm branch-repo-a\n</pre>\n\nAnd you're ready to go. *Pieace of cake, isn't it?* ¬¬","html":"<p><img src=\"/content/images/2014/Aug/git_filter_tree.png\" alt=\"\" /></p>\n\n<p>I have recently found myself in the need to move all the content of a <a href=\"http://www.meteor.com\">Meteor</a> package I was building into another project keeping the history but rewriting the package location (from <code>/</code> => <code>/packages/&lt;name of the package&gt;</code>).</p>\n\n<p>To do so, these are the steps I've followed:</p>\n\n<ol>\n<li>Pray to my <em>personal god</em> (google) and he/she/it delivered. <br />\n<ul><li><a href=\"http://gbayer.com/development/moving-files-from-one-git-repository-to-another-preserving-history/\">Moving files from one git repository to another preserving history</a></li>\n<li><a href=\"http://stackoverflow.com/questions/4042816/how-can-i-rewrite-history-so-that-all-files-are-in-a-subdirectory\">How can I rewrite history so that all files are in a subdirectory?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/5032374/accidentally-pushed-commit-change-git-commit-message\">Accidentally pushed commit: change git commit message</a></li></ul></li>\n<li>Create a test <em>repo-b</em> repository and started the process - first test, then do in real repositories.  </li>\n<li>Clone - or copy if you already have it downloaded - the <em>repo-a</em> <br />\n<ul><li><code>cd repo-a</code></li>\n<li><code>git remote rm &lt;remote name&gt;</code> (you may have more that one remote, remove all of them)</li>\n<li>Rewrite the history to look like it always was inside the subdirectory. Following the first steps of the first tutorial, the rewrite didn't work. The git message was <code>nothing to rewrite</code>. So, finally I managed to do it using this <em>simple</em> command (from the sencond link)<pre class=\"brush: bash\">\ngit filter-branch --prune-empty --tree-filter ' <br />\nif [[ ! -e packages/repo-a-package ]]; then <br />\nmkdir -p packages/repo-a-package <br />\ngit ls-tree --name-only $GIT_COMMIT | xargs -I files mv files packages/repo-a-package <br />\nfi' <br />\n</pre>  </li></ul></li>\n<li>There was a commit message I wanted to be changed since it was <em>Initial commit</em> which now it's not true. It shloud be somthing like: <em>Initial commit of the package <name of the package></em>. To change that message:<pre class=\"brush: bash\"> <br />\ngit filter-branch -f --msg-filter 'sed \"s/Initial commit/Initial commit of the package <name of the package>/g\"' -- --all <br />\n</pre>  </li>\n<li>Last step is to import the contents to the repo-b.<pre class=\"brush: bash;\"> <br />\ngit clone [git repository a url] <br />\ncd [git repository b directory] <br />\ngit remote add branch-repo-a [git repo-a directory] <br />\ngit pull branch-repo-a master <br />\ngit remote rm branch-repo-a <br />\n</pre></li>\n</ol>\n\n<p>And you're ready to go. <em>Pieace of cake, isn't it?</em> ¬¬</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1407264381437,"created_by":1,"updated_at":1407335146469,"updated_by":1,"published_at":1407264381448,"published_by":1},{"id":12,"uuid":"55dabcd6-27b1-47d4-b8e1-5f95340ce9e8","title":"Moving to Meteor 0.9","slug":"moving-to-meteor-0-9","markdown":"![](/content/images/2014/Sep/check-list-guy-small.png)\n\nMeteor is getting closer to its 1.0 version. In that process, the 0.9 version has been recently released and starting from this version, our apps will make use of the Metor package system.\n\nAlso, the integration with our mobile devices is getting closer with the use of [Apache Cordova](http://cordova.apache.org/).\n\nRead more here\n\n* [Introducing Meteor 0.9](https://www.meteor.com/blog/2014/08/26/meteor-090-new-packaging-system)\n* [Isobuild, why Meteor created a new package system](https://www.meteor.com/blog/2014/08/28/isobuild-why-meteor-created-a-new-package-system)\n* [Meteor packaging system, understanding, versioning](https://meteorhacks.com/meteor-packaging-system-understanding-versioning.html)\n* [Q&A Percolate (meteorite) on packaging](http://blog.percolatestudio.com/engineering/meteor-packaging-questions/)\n* [Discover Meteor: Updating to 0.9.0](https://www.discovermeteor.com/blog/updating-to-090/)\n* [Official Meteor migration guide](https://hackpad.com/Migrating-Apps-UfPrM192vSQ)","html":"<p><img src=\"/content/images/2014/Sep/check-list-guy-small.png\" alt=\"\" /></p>\n\n<p>Meteor is getting closer to its 1.0 version. In that process, the 0.9 version has been recently released and starting from this version, our apps will make use of the Metor package system.</p>\n\n<p>Also, the integration with our mobile devices is getting closer with the use of <a href=\"http://cordova.apache.org/\">Apache Cordova</a>.</p>\n\n<p>Read more here</p>\n\n<ul>\n<li><a href=\"https://www.meteor.com/blog/2014/08/26/meteor-090-new-packaging-system\">Introducing Meteor 0.9</a></li>\n<li><a href=\"https://www.meteor.com/blog/2014/08/28/isobuild-why-meteor-created-a-new-package-system\">Isobuild, why Meteor created a new package system</a></li>\n<li><a href=\"https://meteorhacks.com/meteor-packaging-system-understanding-versioning.html\">Meteor packaging system, understanding, versioning</a></li>\n<li><a href=\"http://blog.percolatestudio.com/engineering/meteor-packaging-questions/\">Q&amp;A Percolate (meteorite) on packaging</a></li>\n<li><a href=\"https://www.discovermeteor.com/blog/updating-to-090/\">Discover Meteor: Updating to 0.9.0</a></li>\n<li><a href=\"https://hackpad.com/Migrating-Apps-UfPrM192vSQ\">Official Meteor migration guide</a></li>\n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1410523613465,"created_by":1,"updated_at":1410776769678,"updated_by":1,"published_at":1410608402267,"published_by":1},{"id":13,"uuid":"8000d930-4f95-4373-aba7-7f1d7b5f877e","title":"Meteor, async to sync","slug":"meteor-async-to-sync","markdown":"<iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/AWJ8LIzQMHY\" frameborder=\"0\" allowfullscreen></iframe>\n\nRecently I needed to use an external API using the *brand new* SOAP protocol :-P and so I decided to use the soap [npm package](https://www.npmjs.org/package/soap).\n\nHere is a set of links that might be interesint for you to read on how to use Meteor in a synchronous way.\n\n* [EventedMind, introduction to fibers](https://www.eventedmind.com/feed/nodejs-introducing-fibers)\n* [EventedMind, use bindEnvironment()](https://www.eventedmind.com/feed/meteor-what-is-meteor-bindenvironment)\n* [EventedMind, wrap async](https://www.eventedmind.com/feed/meteor-meteor-wrapasync)\n* [EventedMind, using futures](https://www.eventedmind.com/feed/nodejs-using-futures)\n* [Meteor hacks, fibers, eventloop and meteor](https://meteorhacks.com/fibers-eventloop-and-meteor.html)\n\nAnd some questions posted to Stackoverflow\n\n* [Synchronizing multiple async queries before returning?](https://stackoverflow.com/questions/25940806/meteor-synchronizing-multiple-async-queries-before-returning)\n* [Calling an asynchronous function inside a Meteor.method and returning the result](http://stackoverflow.com/questions/12569712/meteor-calling-an-asynchronous-function-inside-a-meteor-method-and-returning-th/21542356#21542356)\n* [How to make Meteor methods synchronous?](https://stackoverflow.com/questions/22668718/how-to-make-meteor-methods-synchronous)\n* [How to call async method from Meteor own callbacks?](http://stackoverflow.com/questions/16269507/how-to-call-async-method-from-meteor-own-callbacks)\n\nAnd a [gist wrapping some possibilities](https://gist.github.com/possibilities/3443021) ","html":"<iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/AWJ8LIzQMHY\" frameborder=\"0\" allowfullscreen></iframe>\n\n<p>Recently I needed to use an external API using the <em>brand new</em> SOAP protocol :-P and so I decided to use the soap <a href=\"https://www.npmjs.org/package/soap\">npm package</a>.</p>\n\n<p>Here is a set of links that might be interesint for you to read on how to use Meteor in a synchronous way.</p>\n\n<ul>\n<li><a href=\"https://www.eventedmind.com/feed/nodejs-introducing-fibers\">EventedMind, introduction to fibers</a></li>\n<li><a href=\"https://www.eventedmind.com/feed/meteor-what-is-meteor-bindenvironment\">EventedMind, use bindEnvironment()</a></li>\n<li><a href=\"https://www.eventedmind.com/feed/meteor-meteor-wrapasync\">EventedMind, wrap async</a></li>\n<li><a href=\"https://www.eventedmind.com/feed/nodejs-using-futures\">EventedMind, using futures</a></li>\n<li><a href=\"https://meteorhacks.com/fibers-eventloop-and-meteor.html\">Meteor hacks, fibers, eventloop and meteor</a></li>\n</ul>\n\n<p>And some questions posted to Stackoverflow</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/25940806/meteor-synchronizing-multiple-async-queries-before-returning\">Synchronizing multiple async queries before returning?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/12569712/meteor-calling-an-asynchronous-function-inside-a-meteor-method-and-returning-th/21542356#21542356\">Calling an asynchronous function inside a Meteor.method and returning the result</a></li>\n<li><a href=\"https://stackoverflow.com/questions/22668718/how-to-make-meteor-methods-synchronous\">How to make Meteor methods synchronous?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/16269507/how-to-call-async-method-from-meteor-own-callbacks\">How to call async method from Meteor own callbacks?</a></li>\n</ul>\n\n<p>And a <a href=\"https://gist.github.com/possibilities/3443021\">gist wrapping some possibilities</a> </p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1411986685678,"created_by":1,"updated_at":1411987269562,"updated_by":1,"published_at":1411986689659,"published_by":1}],"users":[{"id":1,"uuid":"bc7e29d0-0723-487b-954e-e1ea7b542d79","name":"Francisco Calle Moreno","slug":"francisco-calle-moreno","password":"$2a$10$AG8qN0P4qVZI1Zg9VWsrO.JmbEtMbfcUFo37399eqF6Jj9yORDvdu","email":"francisco.calle.moreno@gmail.com","image":"//www.gravatar.com/avatar/cadcce4340363aa6fe66554f6f52b076?d=404","cover":"/content/images/2014/Jan/tony_taka_wallpaper_tattoo.jpg","bio":"I'm a tech addict. No distinctions. From gadgets to fridges with led screens. Lately a Meteor developer but eager to learn more and more.","website":"http://blog.fcallem.net","location":"Fuenlabrada","accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"last_login":1435650838443,"created_at":1389650586746,"created_by":1,"updated_at":1435650946207,"updated_by":1}],"roles":[{"id":1,"uuid":"6aeeb6dc-dbf4-4e03-b0f4-1f50083b614d","name":"Administrator","description":"Administrators","created_at":1389624432955,"created_by":1,"updated_at":1389624432955,"updated_by":1},{"id":2,"uuid":"6f182850-089b-4f40-8fc0-f682c93b18fb","name":"Editor","description":"Editors","created_at":1389624432959,"created_by":1,"updated_at":1389624432959,"updated_by":1},{"id":3,"uuid":"61611efc-195f-4d9f-9e24-c9946d989bc4","name":"Author","description":"Authors","created_at":1389624432965,"created_by":1,"updated_at":1389624432965,"updated_by":1},{"id":4,"uuid":"f73f9586-f334-4bbe-b553-e19e5bdd4779","name":"Owner","description":"Blog Owner","created_at":1423067445376,"created_by":1,"updated_at":1423067445376,"updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"permissions":[{"id":4,"uuid":"e3b1846d-f962-456e-9f28-34a300ff5376","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":1423067445378,"created_by":1,"updated_at":1423067445378,"updated_by":1},{"id":5,"uuid":"e0111eb6-9e40-4330-98b3-8afc4bd9906d","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":1423067445384,"created_by":1,"updated_at":1423067445384,"updated_by":1},{"id":6,"uuid":"caf4d6a3-1e95-4bfa-a453-d932ee7fb306","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":1423067445388,"created_by":1,"updated_at":1423067445388,"updated_by":1},{"id":7,"uuid":"8e63d84e-4e19-419b-8cd5-a4fa6638132d","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":1423067445393,"created_by":1,"updated_at":1423067445393,"updated_by":1},{"id":8,"uuid":"04faf4c8-8fcf-4c7c-a1f2-5970aa66bcff","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":1423067445404,"created_by":1,"updated_at":1423067445404,"updated_by":1},{"id":9,"uuid":"25989581-16f1-41a5-b33b-4a1790aa250a","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":1423067445406,"created_by":1,"updated_at":1423067445406,"updated_by":1},{"id":10,"uuid":"fb3a8939-44e5-4275-84ce-d699e96ea3eb","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":1423067445408,"created_by":1,"updated_at":1423067445408,"updated_by":1},{"id":11,"uuid":"ebc18512-2840-48be-b299-4a41186abc73","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":1423067445410,"created_by":1,"updated_at":1423067445410,"updated_by":1},{"id":12,"uuid":"a5be3777-867d-4b05-a623-93f4d93379b8","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":1423067445412,"created_by":1,"updated_at":1423067445412,"updated_by":1},{"id":13,"uuid":"2d30facd-035c-4210-82ac-b31d6e5d3b0e","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":1423067445418,"created_by":1,"updated_at":1423067445418,"updated_by":1},{"id":14,"uuid":"394bd0cf-4927-4a8e-941f-97862c364f52","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":1423067445420,"created_by":1,"updated_at":1423067445420,"updated_by":1},{"id":15,"uuid":"f66d7c16-c304-4583-b7aa-796a734bb1a7","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":1423067445421,"created_by":1,"updated_at":1423067445421,"updated_by":1},{"id":16,"uuid":"308261f7-252c-4b94-b7d8-bc282a34d7c2","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":1423067445424,"created_by":1,"updated_at":1423067445424,"updated_by":1},{"id":17,"uuid":"7a3fd3bf-7746-455b-b85e-a92c1d5da667","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":1423067445427,"created_by":1,"updated_at":1423067445427,"updated_by":1},{"id":18,"uuid":"873eea69-1a52-4cea-8a54-eb606a861fa0","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":1423067445428,"created_by":1,"updated_at":1423067445428,"updated_by":1},{"id":19,"uuid":"fc942d3f-2f27-41c1-9d4e-1e2e34b88407","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":1423067445430,"created_by":1,"updated_at":1423067445430,"updated_by":1},{"id":20,"uuid":"4ad5f704-285f-48e7-9f9b-e2c7ca1597df","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":1423067445432,"created_by":1,"updated_at":1423067445432,"updated_by":1},{"id":21,"uuid":"a3a73082-4022-4e09-9c22-2c294e058441","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":1423067445434,"created_by":1,"updated_at":1423067445434,"updated_by":1},{"id":22,"uuid":"8460beab-2259-43c8-8981-dbb253ed4999","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":1423067445436,"created_by":1,"updated_at":1423067445436,"updated_by":1},{"id":23,"uuid":"c487759a-44f5-43a4-855d-35b0a71bb34e","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":1423067445437,"created_by":1,"updated_at":1423067445437,"updated_by":1},{"id":24,"uuid":"510483b5-d2e4-4322-a068-a66ca55865a5","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":1423067445439,"created_by":1,"updated_at":1423067445439,"updated_by":1},{"id":25,"uuid":"f00a9664-71ee-4016-b9aa-eef713f0c398","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":1423067445441,"created_by":1,"updated_at":1423067445441,"updated_by":1},{"id":26,"uuid":"332c2caa-2490-45ee-b337-678e8511a04e","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":1423067445442,"created_by":1,"updated_at":1423067445442,"updated_by":1},{"id":27,"uuid":"47cb094e-1bbe-4fd4-be5b-c13c11c8b4bb","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":1423067445444,"created_by":1,"updated_at":1423067445444,"updated_by":1},{"id":28,"uuid":"b952279c-bcee-4b92-baa1-d18236161431","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":1423067445446,"created_by":1,"updated_at":1423067445446,"updated_by":1},{"id":29,"uuid":"518f3d4f-c0a4-48e8-98a3-c0152dd2b541","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":1423067445447,"created_by":1,"updated_at":1423067445447,"updated_by":1},{"id":30,"uuid":"bd20a9de-14f4-4971-ba1a-068c39ba823a","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":1423067445448,"created_by":1,"updated_at":1423067445448,"updated_by":1},{"id":31,"uuid":"e7ec039c-e627-49e1-aa96-7fd48aae9006","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":1423067445450,"created_by":1,"updated_at":1423067445450,"updated_by":1},{"id":32,"uuid":"978b1119-7eb7-4a50-86d5-2ea792fffb9e","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":1423067445453,"created_by":1,"updated_at":1423067445453,"updated_by":1},{"id":33,"uuid":"55eb97b2-d31d-4886-8bf0-85e1cad7f5c1","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":1423067445455,"created_by":1,"updated_at":1423067445455,"updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":1,"permission_id":31},{"id":32,"role_id":1,"permission_id":32},{"id":33,"role_id":1,"permission_id":33},{"id":34,"role_id":2,"permission_id":11},{"id":35,"role_id":2,"permission_id":12},{"id":36,"role_id":2,"permission_id":13},{"id":37,"role_id":2,"permission_id":14},{"id":38,"role_id":2,"permission_id":15},{"id":39,"role_id":2,"permission_id":16},{"id":40,"role_id":2,"permission_id":17},{"id":41,"role_id":2,"permission_id":19},{"id":42,"role_id":2,"permission_id":20},{"id":43,"role_id":2,"permission_id":21},{"id":44,"role_id":2,"permission_id":22},{"id":45,"role_id":2,"permission_id":23},{"id":46,"role_id":2,"permission_id":24},{"id":47,"role_id":2,"permission_id":27},{"id":48,"role_id":2,"permission_id":28},{"id":49,"role_id":2,"permission_id":29},{"id":50,"role_id":2,"permission_id":30},{"id":51,"role_id":2,"permission_id":31},{"id":52,"role_id":2,"permission_id":32},{"id":53,"role_id":2,"permission_id":33},{"id":54,"role_id":3,"permission_id":11},{"id":55,"role_id":3,"permission_id":12},{"id":56,"role_id":3,"permission_id":14},{"id":57,"role_id":3,"permission_id":16},{"id":58,"role_id":3,"permission_id":17},{"id":59,"role_id":3,"permission_id":19},{"id":60,"role_id":3,"permission_id":20},{"id":61,"role_id":3,"permission_id":21},{"id":62,"role_id":3,"permission_id":23},{"id":63,"role_id":3,"permission_id":27},{"id":64,"role_id":3,"permission_id":28},{"id":65,"role_id":3,"permission_id":33}],"settings":[{"id":1,"uuid":"31f03801-a9a9-49d3-b2a1-277c3f2343e8","key":"databaseVersion","value":"003","type":"core","created_at":1389624432989,"created_by":1,"updated_at":1389624432989,"updated_by":1},{"id":2,"uuid":"159925ed-ee76-4785-a29e-8f3bdbf28a6f","key":"dbHash","value":"60e54b73-7f1d-4f8d-99f0-e0e935f2e97f","type":"core","created_at":1389624432990,"created_by":1,"updated_at":1389624433125,"updated_by":1},{"id":3,"uuid":"bab504b1-05a4-43e6-8f63-1d9f9d783919","key":"nextUpdateCheck","value":"1435737226","type":"core","created_at":1389624432990,"created_by":1,"updated_at":1435650826528,"updated_by":1},{"id":4,"uuid":"384ecadb-2923-4d3e-9cb8-5d2f02d0b420","key":"displayUpdateNotification","value":"0.5.0","type":"core","created_at":1389624432990,"created_by":1,"updated_at":1435650826533,"updated_by":1},{"id":5,"uuid":"6ed76b6e-9872-4fe4-bcf5-cfb689a23087","key":"title","value":"bitIO Ghost Blog","type":"blog","created_at":1389624432991,"created_by":1,"updated_at":1391170905777,"updated_by":1},{"id":6,"uuid":"e42c1cf1-869d-4db1-b759-513131dd9c1a","key":"description","value":"Just me blogging","type":"blog","created_at":1389624432991,"created_by":1,"updated_at":1391170905779,"updated_by":1},{"id":7,"uuid":"cf5dd68c-83be-4fae-ac10-01e13f7f0c38","key":"email","value":"francisco.calle.moreno@gmail.com","type":"blog","created_at":1389624432991,"created_by":1,"updated_at":1391170905782,"updated_by":1},{"id":8,"uuid":"9d293f43-9f16-40b3-996c-2dffbf454666","key":"logo","value":"/content/images/2014/Jan/pocoyo_avatar.png","type":"blog","created_at":1389624432992,"created_by":1,"updated_at":1391170905784,"updated_by":1},{"id":9,"uuid":"c16a41e3-e085-43ee-8c4c-3e36e63694ed","key":"cover","value":"/content/images/2014/Jan/wallpaper_00972.jpg","type":"blog","created_at":1389624432994,"created_by":1,"updated_at":1391170905786,"updated_by":1},{"id":10,"uuid":"dd31f747-78c7-433a-8f0e-de64ed8adc3e","key":"defaultLang","value":"en_US","type":"blog","created_at":1389624432994,"created_by":1,"updated_at":1391170905787,"updated_by":1},{"id":11,"uuid":"b65fdc23-8ef0-4e00-9bfa-1060ac346824","key":"postsPerPage","value":"6","type":"blog","created_at":1389624432994,"created_by":1,"updated_at":1391170905788,"updated_by":1},{"id":12,"uuid":"5177cc06-6adf-4710-bae0-cd0ad2311aeb","key":"forceI18n","value":"true","type":"blog","created_at":1389624432995,"created_by":1,"updated_at":1391170905789,"updated_by":1},{"id":13,"uuid":"77486117-12bf-43e0-8428-94ae1e880513","key":"permalinks","value":"/:slug/","type":"blog","created_at":1389624432995,"created_by":1,"updated_at":1391170905790,"updated_by":1},{"id":14,"uuid":"b0811c68-a2db-4fa8-94fb-f4740c0d8999","key":"activeTheme","value":"ghostwall","type":"theme","created_at":1389624432996,"created_by":1,"updated_at":1391170905792,"updated_by":1},{"id":15,"uuid":"c3924706-25b4-43bd-bf0e-92ef580eb022","key":"activePlugins","value":"[]","type":"plugin","created_at":1389624432996,"created_by":1,"updated_at":1389624432996,"updated_by":1},{"id":16,"uuid":"4e67a480-bcda-4c3a-852d-3837a2776dbb","key":"installedPlugins","value":"[]","type":"plugin","created_at":1389624433003,"created_by":1,"updated_at":1407261928657,"updated_by":1},{"id":17,"uuid":"859291ab-d624-47f1-92b9-7908a87e177e","key":"activeApps","value":"[]","type":"app","created_at":1407265257371,"created_by":1,"updated_at":1407265257371,"updated_by":1},{"id":18,"uuid":"b70d2a3b-df12-4d50-90a6-ba8412d2d50f","key":"installedApps","value":"[]","type":"app","created_at":1407265257373,"created_by":1,"updated_at":1435596833350,"updated_by":1},{"id":19,"uuid":"676958a8-aab8-41b8-a361-52b9c689e08b","key":"ghost_head","value":"","type":"blog","created_at":1423067445536,"created_by":1,"updated_at":1423067445536,"updated_by":1},{"id":20,"uuid":"5ae1daaf-a2db-4cbe-9cec-b27ba16d36ea","key":"ghost_foot","value":"","type":"blog","created_at":1423067445536,"created_by":1,"updated_at":1423067445536,"updated_by":1},{"id":21,"uuid":"298444f7-c366-486d-9418-595c5190560e","key":"labs","value":"{}","type":"blog","created_at":1423067445536,"created_by":1,"updated_at":1423067445536,"updated_by":1},{"id":22,"uuid":"e60f2619-2873-467c-ba28-aece1a5fabe2","key":"navigation","value":"[{\"label\":\"Home\", \"url\":\"/\"}]","type":"blog","created_at":1435588275865,"created_by":1,"updated_at":1435588275865,"updated_by":1},{"id":23,"uuid":"7f78ad3a-d635-4546-b340-92143eba2063","key":"isPrivate","value":"false","type":"blog","created_at":1435588275867,"created_by":1,"updated_at":1435588275867,"updated_by":1},{"id":24,"uuid":"2bcca3db-cc3a-4d70-9890-eab1ddadb895","key":"password","value":"","type":"blog","created_at":1435588275867,"created_by":1,"updated_at":1435588275867,"updated_by":1}],"tags":[{"id":1,"uuid":"86e1b250-a591-46de-adc3-82ed34629c18","name":"Getting Started","slug":"getting-started","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389624432950,"created_by":1,"updated_at":1389624432950,"updated_by":1,"image":null,"hidden":0},{"id":2,"uuid":"3dee4278-7898-4e42-8b10-f5887f7334f0","name":"javascript","slug":"javascript","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389656985471,"created_by":1,"updated_at":1389656985471,"updated_by":1,"image":null,"hidden":0},{"id":3,"uuid":"e9a8af6d-101c-4ed9-a102-4c3810dabc8a","name":"meteor","slug":"meteor","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389656985471,"created_by":1,"updated_at":1389656985471,"updated_by":1,"image":null,"hidden":0},{"id":4,"uuid":"932e1134-23c9-443d-b794-a534ddc50929","name":"disqus","slug":"disqus","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389656985471,"created_by":1,"updated_at":1389656985471,"updated_by":1,"image":null,"hidden":0},{"id":5,"uuid":"5c1954f6-9b5a-429b-82d4-36122e5bce22","name":"sso","slug":"sso","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389656985472,"created_by":1,"updated_at":1389656985472,"updated_by":1,"image":null,"hidden":0},{"id":6,"uuid":"0aeb528c-ff5b-4a24-ad54-b029776046ce","name":"questions","slug":"questions","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389657392423,"created_by":1,"updated_at":1389657392423,"updated_by":1,"image":null,"hidden":0},{"id":7,"uuid":"9803a165-03fb-4547-b2d3-212bc44eb756","name":"job","slug":"job","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389657392424,"created_by":1,"updated_at":1389657392424,"updated_by":1,"image":null,"hidden":0},{"id":8,"uuid":"86cdc705-be0f-4ac7-afd4-a3097822faca","name":"interview","slug":"interview","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389657392424,"created_by":1,"updated_at":1389657392424,"updated_by":1,"image":null,"hidden":0},{"id":9,"uuid":"176242f6-ba86-487d-affa-48ba99d9461c","name":"node.js","slug":"node-js","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389777359282,"created_by":1,"updated_at":1389777359282,"updated_by":1,"image":null,"hidden":0},{"id":10,"uuid":"330d6c41-ecfa-4ee8-b29e-2c351091e007","name":"ghost","slug":"ghost","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389777359283,"created_by":1,"updated_at":1389777359283,"updated_by":1,"image":null,"hidden":0},{"id":11,"uuid":"1558270e-c47f-419b-8b2e-de9121d23909","name":"git","slug":"git","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1391220229079,"created_by":1,"updated_at":1391220229079,"updated_by":1,"image":null,"hidden":0},{"id":12,"uuid":"e992d3a7-399a-41e4-8a18-94dca0aac8da","name":"digital ocean","slug":"digital-ocean","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1391220229081,"created_by":1,"updated_at":1391220229081,"updated_by":1,"image":null,"hidden":0},{"id":13,"uuid":"78376ac7-b4f8-43be-967f-0b512a7b84ca","name":"blog","slug":"blog","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1391220229081,"created_by":1,"updated_at":1391220229081,"updated_by":1,"image":null,"hidden":0},{"id":14,"uuid":"141f313b-276a-4f44-a009-174f56b5ba89","name":"mac","slug":"mac","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1391422484198,"created_by":1,"updated_at":1391422484198,"updated_by":1,"image":null,"hidden":0},{"id":15,"uuid":"da0c69eb-5ef5-46a5-a2ce-a1c72a0838c6","name":"osx","slug":"osx","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1391422484199,"created_by":1,"updated_at":1391422484199,"updated_by":1,"image":null,"hidden":0},{"id":16,"uuid":"092623cb-2ae6-4127-b646-2f7276128fa1","name":"geektool","slug":"geektool","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1391422484199,"created_by":1,"updated_at":1391422484199,"updated_by":1,"image":null,"hidden":0},{"id":17,"uuid":"6e01bcc0-263c-430f-9bc2-e05975f21c1b","name":"desktop","slug":"desktop","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1391422484199,"created_by":1,"updated_at":1391422484199,"updated_by":1,"image":null,"hidden":0},{"id":18,"uuid":"2dd50950-c078-4f16-993f-95485e092656","name":"meetup","slug":"meetup","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392893970630,"created_by":1,"updated_at":1392893970630,"updated_by":1,"image":null,"hidden":0},{"id":19,"uuid":"977a5b67-016b-47ac-89b4-a8ca49522c47","name":"slid.es","slug":"slid-es","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392893970630,"created_by":1,"updated_at":1392893970630,"updated_by":1,"image":null,"hidden":0},{"id":20,"uuid":"71f4cc48-fa3e-4a89-b555-27de5377cb3e","name":"sublime text 3","slug":"sublime-text-3","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392912912707,"created_by":1,"updated_at":1392912912707,"updated_by":1,"image":null,"hidden":0},{"id":21,"uuid":"454a96d7-e25f-4b48-8374-4c268cb2f622","name":"ternjs","slug":"ternjs","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392912912707,"created_by":1,"updated_at":1392912912707,"updated_by":1,"image":null,"hidden":0},{"id":22,"uuid":"7571d6a7-8593-43aa-b41c-2786b6275bae","name":"autocompletion","slug":"autocompletion","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392912912708,"created_by":1,"updated_at":1392912912708,"updated_by":1,"image":null,"hidden":0},{"id":23,"uuid":"f9db82b8-da40-4e7b-8055-83744a1f759c","name":"environment","slug":"environment","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392912912708,"created_by":1,"updated_at":1392912912708,"updated_by":1,"image":null,"hidden":0},{"id":24,"uuid":"be3b8607-7123-44de-91b2-7130f68df10c","name":"how to","slug":"how-to","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1407264381565,"created_by":1,"updated_at":1407264381565,"updated_by":1,"image":null,"hidden":0},{"id":25,"uuid":"66b37eb7-5f55-47b8-b304-977ab73ae1b3","name":"filter-branch","slug":"filter-branch","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1407264381565,"created_by":1,"updated_at":1407264381565,"updated_by":1,"image":null,"hidden":0},{"id":26,"uuid":"3c46d679-80e4-41b3-a60e-2ff85dce2ce3","name":"rewrite","slug":"rewrite","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1407264381565,"created_by":1,"updated_at":1407264381565,"updated_by":1,"image":null,"hidden":0},{"id":27,"uuid":"39e4f69b-1202-43d6-b2dc-32c63ff21911","name":"0.9","slug":"0-9","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1410776739710,"created_by":1,"updated_at":1410776739710,"updated_by":1,"image":null,"hidden":0},{"id":28,"uuid":"90b7b758-089f-4a05-aa3b-1b590c42841c","name":"upgrade","slug":"upgrade","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1410776739711,"created_by":1,"updated_at":1410776739711,"updated_by":1,"image":null,"hidden":0},{"id":29,"uuid":"c73c062e-45d1-4140-be0b-ff5f4568577d","name":"links","slug":"links","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1410776739712,"created_by":1,"updated_at":1410776739712,"updated_by":1,"image":null,"hidden":0},{"id":30,"uuid":"6ee25161-b807-4cbe-a455-45f4658ee931","name":"async","slug":"async","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1411986685754,"created_by":1,"updated_at":1411986685754,"updated_by":1,"image":null,"hidden":0},{"id":31,"uuid":"85de097d-12ae-4a92-abd2-a2a125de433d","name":"sync","slug":"sync","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1411986685754,"created_by":1,"updated_at":1411986685754,"updated_by":1,"image":null,"hidden":0},{"id":32,"uuid":"54e0a801-93ba-4627-bb78-d5974501f8d8","name":"future","slug":"future","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1411986685755,"created_by":1,"updated_at":1411986685755,"updated_by":1,"image":null,"hidden":0}],"posts_tags":[{"id":2,"post_id":2,"tag_id":2},{"id":3,"post_id":2,"tag_id":3},{"id":4,"post_id":2,"tag_id":4},{"id":5,"post_id":2,"tag_id":5},{"id":6,"post_id":3,"tag_id":2},{"id":7,"post_id":3,"tag_id":6},{"id":8,"post_id":3,"tag_id":7},{"id":9,"post_id":3,"tag_id":8},{"id":10,"post_id":4,"tag_id":9},{"id":11,"post_id":4,"tag_id":10},{"id":16,"post_id":7,"tag_id":14},{"id":17,"post_id":7,"tag_id":15},{"id":18,"post_id":7,"tag_id":16},{"id":19,"post_id":7,"tag_id":17},{"id":20,"post_id":8,"tag_id":3},{"id":21,"post_id":8,"tag_id":18},{"id":22,"post_id":8,"tag_id":19},{"id":23,"post_id":9,"tag_id":3},{"id":24,"post_id":9,"tag_id":20},{"id":25,"post_id":9,"tag_id":21},{"id":26,"post_id":9,"tag_id":22},{"id":27,"post_id":9,"tag_id":23},{"id":28,"post_id":11,"tag_id":11},{"id":29,"post_id":11,"tag_id":24},{"id":30,"post_id":11,"tag_id":25},{"id":31,"post_id":11,"tag_id":26},{"id":32,"post_id":12,"tag_id":3},{"id":33,"post_id":12,"tag_id":27},{"id":34,"post_id":12,"tag_id":28},{"id":35,"post_id":12,"tag_id":29},{"id":36,"post_id":13,"tag_id":3},{"id":37,"post_id":13,"tag_id":30},{"id":38,"post_id":13,"tag_id":31},{"id":39,"post_id":13,"tag_id":32},{"id":40,"post_id":5,"tag_id":10},{"id":41,"post_id":5,"tag_id":11},{"id":42,"post_id":5,"tag_id":12},{"id":43,"post_id":5,"tag_id":13}],"permissions_apps":[],"apps":[],"app_settings":[],"app_fields":[]}}